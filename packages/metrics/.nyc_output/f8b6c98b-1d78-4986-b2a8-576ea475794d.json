{"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/client/index.ts":{"path":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/client/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":30},"end":{"line":7,"column":75}},"5":{"start":{"line":8,"column":27},"end":{"line":8,"column":69}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":16}},"8":{"start":{"line":13,"column":21},"end":{"line":13,"column":134}},"9":{"start":{"line":14,"column":29},"end":{"line":14,"column":85}},"10":{"start":{"line":15,"column":8},"end":{"line":18,"column":11}},"11":{"start":{"line":16,"column":25},"end":{"line":16,"column":49}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":37}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":166}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"15":{"start":{"line":21,"column":8},"end":{"line":23,"column":10}},"16":{"start":{"line":26,"column":8},"end":{"line":31,"column":35}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":36}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"19":{"start":{"line":38,"column":0},"end":{"line":38,"column":26}},"20":{"start":{"line":39,"column":22},"end":{"line":39,"column":53}},"21":{"start":{"line":39,"column":34},"end":{"line":39,"column":53}},"22":{"start":{"line":40,"column":0},"end":{"line":40,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":24},"end":{"line":24,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":89},"end":{"line":15,"column":90}},"loc":{"start":{"line":15,"column":95},"end":{"line":18,"column":9}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":53},"end":{"line":32,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":17},"end":{"line":36,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":22},"end":{"line":39,"column":23}},"loc":{"start":{"line":39,"column":34},"end":{"line":39,"column":53}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":21},"end":{"line":13,"column":134}},"type":"cond-expr","locations":[{"start":{"line":13,"column":43},"end":{"line":13,"column":70}},{"start":{"line":13,"column":73},"end":{"line":13,"column":134}}],"line":13},"4":{"loc":{"start":{"line":19,"column":95},"end":{"line":19,"column":132}},"type":"cond-expr","locations":[{"start":{"line":19,"column":124},"end":{"line":19,"column":125}},{"start":{"line":19,"column":128},"end":{"line":19,"column":132}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":2,"11":1,"12":1,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":1},"f":{"0":1,"1":2,"2":1,"3":2,"4":2,"5":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,0],"4":[2,0]},"inputSourceMap":{"version":3,"file":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/client/index.ts","sources":["/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/client/index.ts"],"names":[],"mappings":";;;;;;AACA,4EAAwE;AACxE,sEAAuF;AACvF,oDAAkC;AA6BlC,MAAa,OAAQ,SAAQ,gBAAY;IAWvC,YAAY,MAAwB;QAClC,KAAK,EAAE,CAAC;QAER,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,wCAAkB,CAAC,eAAe,CAAC,IAAI,CAAC;QACzG,MAAM,EAAE,QAAQ,EAAE,GAAG,wCAAkB,CAAC,eAAe,CAAC;QAExD,IAAI,CAAC,QAAQ,GAAG,IAAI,wCAAkB,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE;YAC9D,MAAM,IAAI,GAAoB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;YACvD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,gCAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAE3I,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG;YACf,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,EAAE,WAAW,EAAE,wBAAwB,EAAE,CAAC;SACxH,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,SAAiB,EAAE,UAAkB,EAAE,IAA0B;QACnF,IAAI,CAAC,SAAS,CAAC,mBAAmB;aAC/B,IAAI,CAAC;YACJ,SAAS;YACT,WAAW,EAAE,UAAU,CAAC,QAAQ,EAAE;SACnC,CAAC;aACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;CACF;AA5CD,0BA4CC;AAED,MAAM,aAAa,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;AAE9D,kBAAe,aAAa,CAAC","sourcesContent":["import { ValueRecorder } from '@opentelemetry/api-metrics';\nimport { PrometheusExporter } from '@opentelemetry/exporter-prometheus';\nimport { Meter, MeterProvider, MetricExporter } from '@opentelemetry/sdk-metrics-base';\nimport EventEmitter from 'events';\n\nexport interface Config {\n  PORT_METRICS?: string | number | null | undefined;\n  NODE_ENV: string;\n  SERVICE_NAME: string;\n}\n\n/**\n * Events that can be emitted by an instance of {@link Metrics}.\n * Keys are the event name and values are the event data.\n */\nexport interface Events {\n  /**\n   * @example\n   * ```ts\n   * import * as VFMetrics from '@voiceflow/metrics';\n   *\n   * super.once('ready', ({ port, path }: VFMetrics.Client.Events['ready']) => {\n   *   log.info(`[metrics] exporter ready ${log.vars({ port, path })}`);\n   * });\n   * ```\n   */\n  ready: {\n    port: number;\n    path: string;\n  };\n}\n\nexport class Metrics extends EventEmitter {\n  protected meter: Meter;\n\n  private exporter: MetricExporter;\n\n  protected counters: Record<never, never>;\n\n  protected recorders: {\n    httpRequestDuration: ValueRecorder;\n  };\n\n  constructor(config: Readonly<Config>) {\n    super();\n\n    const port = config.PORT_METRICS ? Number(config.PORT_METRICS) : PrometheusExporter.DEFAULT_OPTIONS.port;\n    const { endpoint } = PrometheusExporter.DEFAULT_OPTIONS;\n\n    this.exporter = new PrometheusExporter({ port, endpoint }, () => {\n      const data: Events['ready'] = { port, path: endpoint };\n      this.emit('ready', data);\n    });\n\n    this.meter = new MeterProvider({ exporter: this.exporter, interval: config.NODE_ENV === 'test' ? 0 : 1000 }).getMeter(config.SERVICE_NAME);\n\n    this.counters = {};\n\n    this.recorders = {\n      httpRequestDuration: this.meter.createValueRecorder('http_request_duration', { description: 'Http requests duration' }),\n    };\n  }\n\n  httpRequestDuration(operation: string, statusCode: number, opts: { duration: number }): void {\n    this.recorders.httpRequestDuration\n      .bind({\n        operation,\n        status_code: statusCode.toString(),\n      })\n      .record(opts.duration);\n  }\n\n  async stop(): Promise<void> {\n    await this.meter.shutdown();\n    await this.exporter.shutdown();\n  }\n}\n\nconst MetricsClient = (config: Config) => new Metrics(config);\n\nexport default MetricsClient;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b6b2214f87173a25ba4d3670d68b347558051ae"},"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/index.ts":{"path":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":51}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":53}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":2,"16":2,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":2},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[2,0],"12":[2,2],"13":[0,0],"14":[0,0],"15":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/index.ts","sources":["/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAAmC;AACnC,qDAAqC","sourcesContent":["export * as Client from './client';\nexport * as Testing from './testing';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d2f48a9bb40d281c420a1200783cfdb3ea8893e"},"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/index.ts":{"path":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":0,"9":0,"10":0,"11":1,"12":2,"13":2,"14":2,"15":1,"16":1,"17":1},"f":{"0":2,"1":2,"2":0,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[2,0],"3":[2,0],"4":[2,2],"5":[0,2],"6":[2,0],"7":[0,0],"8":[1,1,1],"9":[2,0],"10":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/index.ts","sources":["/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,qDAAmC;AACnC,oDAAkC","sourcesContent":["export * from './createBaseConfig';\nexport * from './MetricsAsserter';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a72f0e82cabccc323c43e52bba1f8484603e2804"},"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/createBaseConfig.ts":{"path":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/createBaseConfig.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":55}},"5":{"start":{"line":9,"column":29},"end":{"line":9,"column":74}},"6":{"start":{"line":14,"column":25},"end":{"line":18,"column":2}},"7":{"start":{"line":14,"column":38},"end":{"line":18,"column":1}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":25},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":38},"end":{"line":18,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1},"f":{"0":1,"1":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/createBaseConfig.ts","sources":["/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/createBaseConfig.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA+B;AAQ/B,mIAAmI;AACnI,MAAM,oBAAoB,GAAG,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAE3E;;;GAGG;AACI,MAAM,gBAAgB,GAAG,KAAK,IAAyB,EAAE,CAAC,CAAC;IAChE,YAAY,EAAE,CAAC,MAAM,IAAA,kBAAO,GAAE,CAAC,CAAC,QAAQ,EAAE;IAC1C,QAAQ,EAAE,MAAM;IAChB,YAAY,EAAE,oBAAoB;CACnC,CAAC,CAAC;AAJU,QAAA,gBAAgB,oBAI1B","sourcesContent":["import getPort from 'get-port';\n\nexport interface BaseConfig {\n  PORT_METRICS: string;\n  NODE_ENV: 'test';\n  SERVICE_NAME: string;\n}\n\n/** Doing this once in module scope is fine since only 1 service will be running tests, there is no realistic risk of collision. */\nconst DEFAULT_SERVICE_NAME = `test-${Math.random().toString(36).slice(2)}`;\n\n/**\n * Create a base config for the metrics class with a random free port & a `test` `NODE_ENV`.\n * @returns A base config object for the metrics class\n */\nexport const createBaseConfig = async (): Promise<BaseConfig> => ({\n  PORT_METRICS: (await getPort()).toString(),\n  NODE_ENV: 'test',\n  SERVICE_NAME: DEFAULT_SERVICE_NAME,\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ddd33078f6629124e6020c056c082da8d5ab02b"},"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/MetricsAsserter.ts":{"path":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/MetricsAsserter.ts","statementMap":{"0":{"start":{"line":3,"column":22},"end":{"line":5,"column":1}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":62}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":19},"end":{"line":10,"column":45}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":54}},"8":{"start":{"line":12,"column":27},"end":{"line":12,"column":56}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":44}},"11":{"start":{"line":22,"column":8},"end":{"line":30,"column":9}},"12":{"start":{"line":23,"column":29},"end":{"line":23,"column":74}},"13":{"start":{"line":24,"column":12},"end":{"line":26,"column":15}},"14":{"start":{"line":25,"column":16},"end":{"line":25,"column":62}},"15":{"start":{"line":29,"column":12},"end":{"line":29,"column":46}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":43}},"17":{"start":{"line":45,"column":31},"end":{"line":45,"column":123}},"18":{"start":{"line":46,"column":24},"end":{"line":46,"column":58}},"19":{"start":{"line":47,"column":28},"end":{"line":47,"column":86}},"20":{"start":{"line":48,"column":30},"end":{"line":52,"column":10}},"21":{"start":{"line":53,"column":8},"end":{"line":56,"column":10}},"22":{"start":{"line":59,"column":0},"end":{"line":59,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":56},"end":{"line":3,"column":57}},"loc":{"start":{"line":3,"column":71},"end":{"line":5,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":19},"end":{"line":31,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":45},"end":{"line":24,"column":46}},"loc":{"start":{"line":24,"column":61},"end":{"line":26,"column":13}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":31},"end":{"line":36,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":44,"column":17},"end":{"line":57,"column":5}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":22},"end":{"line":5,"column":1}},"type":"binary-expr","locations":[{"start":{"line":3,"column":23},"end":{"line":3,"column":27}},{"start":{"line":3,"column":31},"end":{"line":3,"column":51}},{"start":{"line":3,"column":56},"end":{"line":5,"column":1}}],"line":3},"1":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":61}},"type":"cond-expr","locations":[{"start":{"line":4,"column":37},"end":{"line":4,"column":40}},{"start":{"line":4,"column":43},"end":{"line":4,"column":61}}],"line":4},"2":{"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":33}},"type":"binary-expr","locations":[{"start":{"line":4,"column":12},"end":{"line":4,"column":15}},{"start":{"line":4,"column":19},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}},"type":"default-arg","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":15}}],"line":42},"4":{"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":86}},"type":"cond-expr","locations":[{"start":{"line":47,"column":65},"end":{"line":47,"column":75}},{"start":{"line":47,"column":78},"end":{"line":47,"column":86}}],"line":47}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":3,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":2,"1":1,"2":1,"3":3,"4":1,"5":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[1],"4":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/MetricsAsserter.ts","sources":["/Users/z4o4z/projects/voiceflow/libs/packages/metrics/src/testing/MetricsAsserter.ts"],"names":[],"mappings":";AAAA,yCAAyC;;;;;;AAGzC,kDAA0B;AAC1B,+BAA8B;AAC9B,8CAAsD;AACtD,uDAA+B;AAE/B,yDAAkE;AAElE;;GAEG;AACH,MAAM,eAAe;IACnB,YACmB,OAIf;QAJe,YAAO,GAAP,OAAO,CAItB;IACD,CAAC;IAEJ,KAAK,CAAC,MAAM;QACV,MAAM,IAAA,qBAAK,EAAC,CAAC,CAAC,CAAC;QAEf,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAE7D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC9C,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;SACJ;gBAAS;YACR,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACnC;IACH,CAAC;CACF;AAED,MAAa,eAAe;IAC1B,YAA6B,aAAuD;QAAvD,kBAAa,GAAb,aAAa,CAA0C;IAAG,CAAC;IAExF;;OAEG;IACH,KAAK,CAAC,YAAY,CAAC;IACjB,+CAA+C;IAC/C,MAAM,GAAG,EAAE;IACX,qEAAqE;IACrE,QAAQ,GAIT;QACC,MAAM,cAAc,mCAAQ,CAAC,MAAM,IAAA,mCAAgB,GAAE,CAAC,GAAK,MAAM,CAAE,CAAC;QAEpE,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,cAAgD,CAAC,CAAC;QAErF,MAAM,WAAW,GAAG,eAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAErE,MAAM,aAAa,GAAG,IAAI,eAAe,CAAC;YACxC,OAAO;YACP,WAAW;YACX,KAAK,EAAE,oBAAoB,cAAc,CAAC,YAAY,UAAU;SACjE,CAAC,CAAC;QAEH,OAAO;YACL,OAAO;YACP,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;SACjD,CAAC;IACJ,CAAC;CACF;AAhCD,0CAgCC","sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport type { Metrics as BaseMetrics } from '@metrics/client';\nimport axios from 'axios';\nimport { expect } from 'chai';\nimport { setTimeout as sleep } from 'timers/promises';\nimport types from 'util/types';\n\nimport { BaseConfig, createBaseConfig } from './createBaseConfig';\n\n/**\n * An internal class used to expose the {@link AssertionHelper.assert}\n */\nclass AssertionHelper {\n  constructor(\n    private readonly options: Readonly<{\n      metrics: BaseMetrics;\n      route: string;\n      expressions: readonly RegExp[];\n    }>\n  ) {}\n\n  async assert(): Promise<void> {\n    await sleep(1);\n\n    try {\n      const { data } = await axios.get<string>(this.options.route);\n\n      this.options.expressions.forEach((expression) => {\n        expect(data).to.match(expression);\n      });\n    } finally {\n      await this.options.metrics.stop();\n    }\n  }\n}\n\nexport class MetricsAsserter<Metrics extends BaseMetrics, Config extends Record<never, never>> {\n  constructor(private readonly MetricsClient: (config: Config & BaseConfig) => Metrics) {}\n\n  /**\n   * Assert that a metrics endpoint matches a regular expression(s).\n   */\n  async assertMetric({\n    /** The config to use in the metrics client. */\n    config = {},\n    /** The regular expression(s) to match against the metrics output. */\n    expected,\n  }: {\n    config?: Partial<Config>;\n    expected: RegExp | ReadonlyArray<RegExp>;\n  }): Promise<{ metrics: Metrics; assert: () => Promise<void> }> {\n    const combinedConfig = { ...(await createBaseConfig()), ...config };\n\n    const metrics = this.MetricsClient(combinedConfig as unknown as Config & BaseConfig);\n\n    const expressions = types.isRegExp(expected) ? [expected] : expected;\n\n    const metricsAssert = new AssertionHelper({\n      metrics,\n      expressions,\n      route: `http://localhost:${combinedConfig.PORT_METRICS}/metrics`,\n    });\n\n    return {\n      metrics,\n      assert: metricsAssert.assert.bind(metricsAssert),\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1225259594cb6c2215dc52fd1c00c79bf1e17f39"}}