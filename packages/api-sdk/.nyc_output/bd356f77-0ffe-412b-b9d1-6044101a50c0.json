{"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/client.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/client.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":42}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":64}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":25},"end":{"line":10,"column":5}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":9,"5":9,"6":1},"f":{"0":9},"b":{},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/client.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/client.ts"],"names":[],"mappings":";;;AAAA,iDAA6D;AAC7D,2CAAmC;AAEnC,MAAa,MAAO,SAAQ,2BAAY;IAGtC,YAAY,OAAyE;QACnF,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,IAAI,gBAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;CACF;AARD,wBAQC","sourcesContent":["import { ClientOptions, PublicClient } from './publicClient';\nimport { User } from './resources';\n\nexport class Client extends PublicClient {\n  public user: User;\n\n  constructor(options: Omit<ClientOptions, 'authorization'> & { authorization: string }) {\n    super(options);\n\n    this.user = new User(options.authorization);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"69fca7908c584b630bf64cfdce81503b5d1d8814"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/publicClient.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/publicClient.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":42}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":93}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":53}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":57}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":59}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":59}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":59}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":59}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":100}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":71}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":77}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":89},"end":{"line":21,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":10,"7":10,"8":10,"9":10,"10":10,"11":10,"12":10,"13":10,"14":10,"15":10,"16":1},"f":{"0":1,"1":10},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/publicClient.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/publicClient.ts"],"names":[],"mappings":";;;;;;AAEA,oDAA6C;AAC7C,2CAA2H;AAU3H,MAAa,YAAY;IAqBvB,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,mBAAmB,EAAiB;QAChG,IAAI,CAAC,KAAK,GAAG,IAAI,eAAK,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,IAAI,GAAG,IAAI,gBAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAChF,IAAI,CAAC,aAAa,GAAG,IAAI,yBAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,IAAI,4BAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;CACF;AAlCD,oCAkCC","sourcesContent":["import { Crypto } from '@voiceflow/common';\n\nimport Fetch, { FetchConfig } from './fetch';\nimport { Analytics, APIKey, Diagram, Note, Program, Project, PrototypeProgram, VariableState, Version } from './resources';\n\nexport interface ClientOptions {\n  options?: FetchConfig;\n  clientKey: string;\n  apiEndpoint: string;\n  authorization?: string;\n  analyticsEncryption?: Crypto.Synchronous;\n}\n\nexport class PublicClient {\n  public note: Note;\n\n  public fetch: Fetch;\n\n  public apiKey: APIKey;\n\n  public project: Project;\n\n  public version: Version;\n\n  public program: Program;\n\n  public diagram: Diagram;\n\n  public analytics: Analytics;\n\n  public variableState: VariableState;\n\n  public prototypeProgram: PrototypeProgram;\n\n  constructor({ clientKey, apiEndpoint, authorization, options, analyticsEncryption }: ClientOptions) {\n    this.fetch = new Fetch({ clientKey, apiEndpoint, authorization, options });\n\n    this.note = new Note(this.fetch);\n    this.apiKey = new APIKey(this.fetch);\n    this.project = new Project(this.fetch);\n    this.version = new Version(this.fetch);\n    this.program = new Program(this.fetch);\n    this.diagram = new Diagram(this.fetch);\n    this.analytics = new Analytics(this.fetch, { encryption: analyticsEncryption });\n    this.variableState = new VariableState(this.fetch);\n    this.prototypeProgram = new PrototypeProgram(this.fetch);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b755756baf61ff51829fd4ad6578c3e3fed8b2b"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/fetch.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/fetch.ts","statementMap":{"0":{"start":{"line":2,"column":13},"end":{"line":12,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":14}},"2":{"start":{"line":4,"column":4},"end":{"line":5,"column":20}},"3":{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},"4":{"start":{"line":5,"column":8},"end":{"line":5,"column":20}},"5":{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},"6":{"start":{"line":7,"column":8},"end":{"line":10,"column":9}},"7":{"start":{"line":7,"column":21},"end":{"line":7,"column":22}},"8":{"start":{"line":7,"column":28},"end":{"line":7,"column":59}},"9":{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},"10":{"start":{"line":9,"column":16},"end":{"line":9,"column":34}},"11":{"start":{"line":11,"column":4},"end":{"line":11,"column":13}},"12":{"start":{"line":13,"column":22},"end":{"line":15,"column":1}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":62}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":49}},"16":{"start":{"line":20,"column":23},"end":{"line":24,"column":9}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":52}},"18":{"start":{"line":28,"column":33},"end":{"line":28,"column":58}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":32}},"20":{"start":{"line":32,"column":33},"end":{"line":32,"column":65}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"22":{"start":{"line":36,"column":33},"end":{"line":36,"column":64}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":32}},"24":{"start":{"line":40,"column":33},"end":{"line":40,"column":105}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":32}},"26":{"start":{"line":44,"column":33},"end":{"line":44,"column":61}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"28":{"start":{"line":54,"column":33},"end":{"line":54,"column":92}},"29":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"30":{"start":{"line":58,"column":19},"end":{"line":58,"column":53}},"31":{"start":{"line":58,"column":86},"end":{"line":58,"column":88}},"32":{"start":{"line":58,"column":107},"end":{"line":58,"column":149}},"33":{"start":{"line":59,"column":8},"end":{"line":60,"column":29}},"34":{"start":{"line":63,"column":19},"end":{"line":63,"column":53}},"35":{"start":{"line":63,"column":86},"end":{"line":63,"column":88}},"36":{"start":{"line":63,"column":107},"end":{"line":63,"column":149}},"37":{"start":{"line":64,"column":8},"end":{"line":69,"column":11}},"38":{"start":{"line":72,"column":0},"end":{"line":72,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":38},"end":{"line":2,"column":39}},"loc":{"start":{"line":2,"column":54},"end":{"line":12,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":56},"end":{"line":13,"column":57}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":68},"end":{"line":26,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":19},"end":{"line":30,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":26},"end":{"line":34,"column":5}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":25},"end":{"line":38,"column":5}},"line":35},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":34},"end":{"line":42,"column":5}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":22},"end":{"line":46,"column":5}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":57},"end":{"line":56,"column":5}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":28},"end":{"line":61,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":33},"end":{"line":70,"column":5}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":13},"end":{"line":12,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":14},"end":{"line":2,"column":18}},{"start":{"line":2,"column":22},"end":{"line":2,"column":33}},{"start":{"line":2,"column":38},"end":{"line":12,"column":1}}],"line":2},"1":{"loc":{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},"type":"if","locations":[{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},{"start":{"line":4,"column":21},"end":{"line":5,"column":20}}],"line":4},"2":{"loc":{"start":{"line":4,"column":25},"end":{"line":4,"column":87}},"type":"binary-expr","locations":[{"start":{"line":4,"column":25},"end":{"line":4,"column":67}},{"start":{"line":4,"column":71},"end":{"line":4,"column":87}}],"line":4},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},{"start":{"line":6,"column":4},"end":{"line":10,"column":9}}],"line":6},"4":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":71}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":17}},{"start":{"line":6,"column":21},"end":{"line":6,"column":71}}],"line":6},"5":{"loc":{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},"type":"if","locations":[{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},{"start":{"line":8,"column":12},"end":{"line":9,"column":34}}],"line":8},"6":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":90}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":90}}],"line":8},"7":{"loc":{"start":{"line":13,"column":22},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":23},"end":{"line":13,"column":27}},{"start":{"line":13,"column":31},"end":{"line":13,"column":51}},{"start":{"line":13,"column":56},"end":{"line":15,"column":1}}],"line":13},"8":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":61}},"type":"cond-expr","locations":[{"start":{"line":14,"column":37},"end":{"line":14,"column":40}},{"start":{"line":14,"column":43},"end":{"line":14,"column":61}}],"line":14},"9":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":33}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":15}},{"start":{"line":14,"column":19},"end":{"line":14,"column":33}}],"line":14},"10":{"loc":{"start":{"line":21,"column":21},"end":{"line":21,"column":80}},"type":"cond-expr","locations":[{"start":{"line":21,"column":49},"end":{"line":21,"column":60}},{"start":{"line":21,"column":63},"end":{"line":21,"column":80}}],"line":21},"11":{"loc":{"start":{"line":22,"column":67},"end":{"line":22,"column":132}},"type":"cond-expr","locations":[{"start":{"line":22,"column":108},"end":{"line":22,"column":114}},{"start":{"line":22,"column":117},"end":{"line":22,"column":132}}],"line":22},"12":{"loc":{"start":{"line":22,"column":67},"end":{"line":22,"column":105}},"type":"binary-expr","locations":[{"start":{"line":22,"column":67},"end":{"line":22,"column":83}},{"start":{"line":22,"column":87},"end":{"line":22,"column":105}}],"line":22},"13":{"loc":{"start":{"line":22,"column":152},"end":{"line":22,"column":190}},"type":"cond-expr","locations":[{"start":{"line":22,"column":168},"end":{"line":22,"column":185}},{"start":{"line":22,"column":188},"end":{"line":22,"column":190}}],"line":22},"14":{"loc":{"start":{"line":40,"column":67},"end":{"line":40,"column":104}},"type":"cond-expr","locations":[{"start":{"line":40,"column":75},"end":{"line":40,"column":92}},{"start":{"line":40,"column":95},"end":{"line":40,"column":104}}],"line":40}},"s":{"0":1,"1":2,"2":2,"3":6,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":0,"11":2,"12":1,"13":1,"14":1,"15":1,"16":24,"17":24,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":2,"25":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1},"f":{"0":2,"1":1,"2":24,"3":1,"4":1,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1},"b":{"0":[1,1,1],"1":[2,4],"2":[6,6],"3":[2,0],"4":[2,2],"5":[0,0],"6":[0,0],"7":[1,1,1],"8":[0,1],"9":[1,1],"10":[2,22],"11":[20,4],"12":[24,24],"13":[22,2],"14":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/fetch.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/fetch.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\nexport interface FetchConfig {\n  headers?: Record<string, string>;\n}\n\ninterface FetchOptions {\n  options?: FetchConfig;\n  clientKey: string;\n  apiEndpoint: string;\n  authorization?: string;\n}\n\ninterface FetchReturnType<T> {\n  data: T;\n  status: number;\n}\n\nexport type PathVariables = Record<string, string | number>;\n\nclass Fetch {\n  private axios: AxiosInstance;\n\n  constructor({ options, clientKey, apiEndpoint, authorization }: FetchOptions) {\n    const config: AxiosRequestConfig = {\n      baseURL: apiEndpoint.endsWith('/') ? apiEndpoint : `${apiEndpoint}/`,\n      headers: { ...options?.headers, clientKey, ...(authorization ? { authorization } : {}) },\n      withCredentials: true,\n    };\n\n    this.axios = axios.create(config);\n  }\n\n  public async get<T>(url: string): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.get<T>(url);\n\n    return { data, status };\n  }\n\n  public async post<T>(url: string, body?: unknown): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.post<T>(url, body);\n\n    return { data, status };\n  }\n\n  public async put<T>(url: string, body?: unknown): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.put<T>(url, body);\n\n    return { data, status };\n  }\n\n  public async patch<T>(url: string, body: unknown, query?: Record<string, string>): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.patch<T>(url, body, query ? { params: query } : undefined);\n\n    return { data, status };\n  }\n\n  public async delete<T>(url: string): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.delete<T>(url);\n\n    return { data, status };\n  }\n\n  /**\n   * Updates the data by the provided path and value, variables can be used in the path\n   * @example\n   * // return Promise<number>\n   * fetch.granularPatch<number>('/endpoint', 'vendors[$vendorID].skillID', 5678, { vendorID: \"234\" })\n   */\n  public async granularPatch<T>(url: string, path: string, value?: T, pathVariables?: PathVariables): Promise<FetchReturnType<T>> {\n    const { data, status } = await this.axios.patch<T>(url, { path, value, pathVariables });\n\n    return { data, status };\n  }\n\n  public setOptions({ headers }: FetchConfig): void {\n    const { clientKey, authorization, ...defaultHeaders } = this.axios.defaults.headers.common;\n\n    this.axios.defaults.headers.common = {\n      ...defaultHeaders,\n      ...headers,\n      clientKey,\n      authorization,\n    };\n  }\n\n  public initWithOptions({ headers }: FetchConfig): Fetch {\n    const { clientKey, authorization, ...defaultHeaders } = this.axios.defaults.headers.common;\n\n    return new Fetch({\n      options: { headers: { ...defaultHeaders, ...headers } },\n      clientKey,\n      apiEndpoint: this.axios.defaults.baseURL!,\n      authorization,\n    });\n  }\n}\n\nexport default Fetch;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cf173f3e2070790b38158213bd70f20b142cf6ae"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/index.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":197}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":133}},"6":{"start":{"line":8,"column":83},"end":{"line":8,"column":127}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":127}},"9":{"start":{"line":10,"column":80},"end":{"line":10,"column":121}},"10":{"start":{"line":11,"column":16},"end":{"line":11,"column":36}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":129}},"12":{"start":{"line":12,"column":81},"end":{"line":12,"column":123}},"13":{"start":{"line":13,"column":13},"end":{"line":13,"column":30}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":123}},"15":{"start":{"line":14,"column":78},"end":{"line":14,"column":117}},"16":{"start":{"line":15,"column":16},"end":{"line":15,"column":36}},"17":{"start":{"line":16,"column":0},"end":{"line":16,"column":129}},"18":{"start":{"line":16,"column":81},"end":{"line":16,"column":123}},"19":{"start":{"line":17,"column":16},"end":{"line":17,"column":36}},"20":{"start":{"line":18,"column":0},"end":{"line":18,"column":129}},"21":{"start":{"line":18,"column":81},"end":{"line":18,"column":123}},"22":{"start":{"line":19,"column":25},"end":{"line":19,"column":54}},"23":{"start":{"line":20,"column":0},"end":{"line":20,"column":147}},"24":{"start":{"line":20,"column":90},"end":{"line":20,"column":141}},"25":{"start":{"line":21,"column":13},"end":{"line":21,"column":30}},"26":{"start":{"line":22,"column":0},"end":{"line":22,"column":123}},"27":{"start":{"line":22,"column":78},"end":{"line":22,"column":117}},"28":{"start":{"line":23,"column":22},"end":{"line":23,"column":48}},"29":{"start":{"line":24,"column":0},"end":{"line":24,"column":141}},"30":{"start":{"line":24,"column":87},"end":{"line":24,"column":135}},"31":{"start":{"line":25,"column":16},"end":{"line":25,"column":36}},"32":{"start":{"line":26,"column":0},"end":{"line":26,"column":129}},"33":{"start":{"line":26,"column":81},"end":{"line":26,"column":123}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":69},"end":{"line":8,"column":70}},"loc":{"start":{"line":8,"column":81},"end":{"line":8,"column":129}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":66},"end":{"line":10,"column":67}},"loc":{"start":{"line":10,"column":78},"end":{"line":10,"column":123}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":67},"end":{"line":12,"column":68}},"loc":{"start":{"line":12,"column":79},"end":{"line":12,"column":125}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":14,"column":64},"end":{"line":14,"column":65}},"loc":{"start":{"line":14,"column":76},"end":{"line":14,"column":119}},"line":14},"5":{"name":"(anonymous_5)","decl":{"start":{"line":16,"column":67},"end":{"line":16,"column":68}},"loc":{"start":{"line":16,"column":79},"end":{"line":16,"column":125}},"line":16},"6":{"name":"(anonymous_6)","decl":{"start":{"line":18,"column":67},"end":{"line":18,"column":68}},"loc":{"start":{"line":18,"column":79},"end":{"line":18,"column":125}},"line":18},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":76},"end":{"line":20,"column":77}},"loc":{"start":{"line":20,"column":88},"end":{"line":20,"column":143}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":64},"end":{"line":22,"column":65}},"loc":{"start":{"line":22,"column":76},"end":{"line":22,"column":119}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":73},"end":{"line":24,"column":74}},"loc":{"start":{"line":24,"column":85},"end":{"line":24,"column":137}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":67},"end":{"line":26,"column":68}},"loc":{"start":{"line":26,"column":79},"end":{"line":26,"column":125}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":189,"2":1,"3":1,"4":1,"5":1,"6":11,"7":1,"8":1,"9":16,"10":1,"11":1,"12":22,"13":1,"14":1,"15":13,"16":1,"17":1,"18":19,"19":1,"20":1,"21":27,"22":1,"23":1,"24":13,"25":1,"26":1,"27":14,"28":1,"29":1,"30":13,"31":1,"32":1,"33":41},"f":{"0":189,"1":11,"2":16,"3":22,"4":13,"5":19,"6":27,"7":13,"8":14,"9":13,"10":41},"b":{"0":[1,1,1],"1":[189,0],"2":[189,189]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/index.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/index.ts"],"names":[],"mappings":";;;;;;AAAA,yCAAmD;AAA1C,uHAAA,OAAO,OAAa;AAC7B,mCAA6C;AAApC,iHAAA,OAAO,OAAU;AAC1B,qCAA+C;AAAtC,mHAAA,OAAO,OAAW;AAC3B,+BAAyC;AAAhC,6GAAA,OAAO,OAAQ;AACxB,qCAA+C;AAAtC,mHAAA,OAAO,OAAW;AAC3B,qCAA+C;AAAtC,mHAAA,OAAO,OAAW;AAC3B,uDAAiE;AAAxD,qIAAA,OAAO,OAAoB;AACpC,+BAAyC;AAAhC,6GAAA,OAAO,OAAQ;AACxB,iDAA2D;AAAlD,+HAAA,OAAO,OAAiB;AACjC,qCAA+C;AAAtC,mHAAA,OAAO,OAAW","sourcesContent":["export { default as Analytics } from './analytics';\nexport { default as APIKey } from './apiKey';\nexport { default as Diagram } from './diagram';\nexport { default as Note } from './note';\nexport { default as Program } from './program';\nexport { default as Project } from './project';\nexport { default as PrototypeProgram } from './prototypeProgram';\nexport { default as User } from './user';\nexport { default as VariableState } from './variableState';\nexport { default as Version } from './version';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"26ca75aa07c1ed92079c9f56fdc319c7a227bb2b"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/index.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":56}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":28}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":36}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":86}},"8":{"start":{"line":14,"column":8},"end":{"line":19,"column":10}},"9":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"10":{"start":{"line":16,"column":16},"end":{"line":16,"column":97}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":76}},"12":{"start":{"line":20,"column":8},"end":{"line":25,"column":10}},"13":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":105}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":84}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":41}},"17":{"start":{"line":27,"column":8},"end":{"line":27,"column":45}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":67}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":69}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":62}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"22":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":62}},"24":{"start":{"line":41,"column":8},"end":{"line":41,"column":62}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":33}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":113}},"27":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":37}},"29":{"start":{"line":53,"column":24},"end":{"line":53,"column":73}},"30":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":54}},"32":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"33":{"start":{"line":58,"column":12},"end":{"line":58,"column":126}},"34":{"start":{"line":60,"column":8},"end":{"line":60,"column":105}},"35":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":37}},"37":{"start":{"line":66,"column":24},"end":{"line":66,"column":86}},"38":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"39":{"start":{"line":68,"column":12},"end":{"line":68,"column":53}},"40":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"41":{"start":{"line":71,"column":12},"end":{"line":71,"column":118}},"42":{"start":{"line":73,"column":8},"end":{"line":73,"column":97}},"43":{"start":{"line":76,"column":24},"end":{"line":76,"column":62}},"44":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"45":{"start":{"line":78,"column":12},"end":{"line":78,"column":123}},"46":{"start":{"line":80,"column":8},"end":{"line":80,"column":100}},"47":{"start":{"line":83,"column":24},"end":{"line":83,"column":76}},"48":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"49":{"start":{"line":85,"column":12},"end":{"line":85,"column":128}},"50":{"start":{"line":87,"column":8},"end":{"line":87,"column":110}},"51":{"start":{"line":90,"column":0},"end":{"line":90,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":37},"end":{"line":30,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":29},"end":{"line":14,"column":30}},"loc":{"start":{"line":14,"column":42},"end":{"line":19,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":43},"end":{"line":25,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":19},"end":{"line":33,"column":5}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":20},"end":{"line":36,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":27},"end":{"line":42,"column":5}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":26},"end":{"line":45,"column":5}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":71},"end":{"line":61,"column":5}},"line":49},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":90},"end":{"line":74,"column":5}},"line":62},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":60},"end":{"line":81,"column":5}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":44},"end":{"line":88,"column":5}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":23},"end":{"line":12,"column":35}},"type":"default-arg","locations":[{"start":{"line":12,"column":33},"end":{"line":12,"column":35}}],"line":12},"4":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},{"start":{"line":15,"column":12},"end":{"line":17,"column":13}}],"line":15},"5":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"6":{"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":61}},"type":"cond-expr","locations":[{"start":{"line":32,"column":32},"end":{"line":32,"column":50}},{"start":{"line":32,"column":53},"end":{"line":32,"column":61}}],"line":32},"7":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"8":{"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":69}},"type":"default-arg","locations":[{"start":{"line":49,"column":67},"end":{"line":49,"column":69}}],"line":49},"9":{"loc":{"start":{"line":49,"column":47},"end":{"line":49,"column":62}},"type":"default-arg","locations":[{"start":{"line":49,"column":60},"end":{"line":49,"column":62}}],"line":49},"10":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{"line":50,"column":8},"end":{"line":52,"column":9}}],"line":50},"11":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"12":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"13":{"loc":{"start":{"line":62,"column":23},"end":{"line":62,"column":88}},"type":"default-arg","locations":[{"start":{"line":62,"column":86},"end":{"line":62,"column":88}}],"line":62},"14":{"loc":{"start":{"line":62,"column":66},"end":{"line":62,"column":81}},"type":"default-arg","locations":[{"start":{"line":62,"column":79},"end":{"line":62,"column":81}}],"line":62},"15":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"16":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{"line":67,"column":8},"end":{"line":69,"column":9}}],"line":67},"17":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"18":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"19":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":28,"8":28,"9":2,"10":1,"11":1,"12":28,"13":4,"14":1,"15":3,"16":28,"17":28,"18":28,"19":28,"20":20,"21":38,"22":9,"23":1,"24":8,"25":6,"26":2,"27":18,"28":6,"29":12,"30":12,"31":8,"32":4,"33":2,"34":2,"35":12,"36":4,"37":8,"38":8,"39":4,"40":4,"41":2,"42":2,"43":2,"44":2,"45":1,"46":1,"47":2,"48":2,"49":1,"50":1,"51":1},"f":{"0":2,"1":28,"2":2,"3":4,"4":20,"5":38,"6":9,"7":6,"8":2,"9":18,"10":12,"11":2,"12":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[10],"4":[1,1],"5":[1,3],"6":[9,11],"7":[1,8],"8":[12],"9":[12],"10":[6,12],"11":[8,4],"12":[2,2],"13":[8],"14":[8],"15":[4,8],"16":[4,4],"17":[2,2],"18":[1,1],"19":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/index.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type Fetch from '@api-sdk/fetch';\nimport { Crypto } from '@voiceflow/common';\n\nimport Fetcher from '../fetcher';\nimport Queue from './queue';\n\nconst ENDPOINT = 'analytics';\nconst ENCRYPTED_ENDPOINT = 'vf-ping';\n\ninterface HashOptions<K> {\n  envIDs?: K[];\n  hashed?: K[];\n  teamhashed?: K[];\n}\n\ninterface TrackOptions<P extends Record<string, any>, K extends keyof P> extends HashOptions<K> {\n  properties?: P;\n}\n\ninterface PublicTrackOptions<P extends Record<string, any>, K extends keyof P> extends TrackOptions<P, K> {\n  anonymousID?: string;\n}\n\ninterface IdentifyOptions<T extends Record<string, any>, K extends keyof T> extends HashOptions<K> {\n  traits: T;\n}\n\ninterface AnalyticsOptions {\n  encryption?: Crypto.Synchronous;\n  batching?: boolean;\n}\n\n// can not have async execution on FE window.addEventListener('beforeunload', ...) process thread\n\nclass Analytics extends Fetcher<Analytics, AnalyticsOptions> {\n  private batching?: boolean;\n\n  private encryption?: Crypto.Synchronous;\n\n  private publicQueue: Queue;\n\n  private privateQueue: Queue;\n\n  constructor(fetch: Fetch, options: AnalyticsOptions = {}) {\n    super({ fetch, clazz: Analytics, endpoint: ENDPOINT, clazzOptions: options });\n\n    this.batching = options.batching;\n    this.encryption = options.encryption;\n    this.publicQueue = new Queue(this.onFlushPublic);\n    this.privateQueue = new Queue(this.onFlushPrivate);\n  }\n\n  protected get endpoint() {\n    return this.encrypted ? ENCRYPTED_ENDPOINT : ENDPOINT;\n  }\n\n  private get encrypted() {\n    return !!this.encryption;\n  }\n\n  private encryptedPayload(data: Record<string, unknown> | Record<string, unknown>[]): { message: string } {\n    if (!this.encryption) {\n      throw new Error('Encryption should be provided!');\n    }\n\n    return { message: this.encryption.encryptJSON(data) };\n  }\n\n  private onFlushPublic = (payload: Record<string, unknown>[]): Promise<unknown> => {\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}/batch`, this.encryptedPayload(payload));\n    }\n\n    return this.fetch.post(`${this.endpoint}/batch-track`, payload);\n  };\n\n  private onFlushPrivate = (payload: Record<string, unknown>[]): Promise<unknown> => {\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}/private-batch`, this.encryptedPayload(payload));\n    }\n\n    return this.fetch.post(`${this.endpoint}/private-batch-track`, payload);\n  };\n\n  public setBatching(batching: boolean): void {\n    this.batching = batching;\n  }\n\n  public flush(): Promise<void> {\n    return Promise.all([this.publicQueue.flush(), this.privateQueue.flush()]).then(Queue.voidFunc);\n  }\n\n  public track<P extends Record<string, any>, K extends keyof P>(\n    event: string,\n    { envIDs, hashed, teamhashed, properties = {} as P }: TrackOptions<P, K> = {}\n  ): Promise<void> {\n    if (!event) {\n      return Promise.resolve();\n    }\n\n    const payload = { event, envIDs, hashed, teamhashed, properties };\n\n    if (this.batching) {\n      return this.privateQueue.enqueue(payload);\n    }\n\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}/private`, this.encryptedPayload(payload)).then(Queue.voidFunc);\n    }\n\n    return this.fetch.post(`${this.endpoint}/private-track`, payload).then(Queue.voidFunc);\n  }\n\n  public trackPublic<P extends Record<string, any>, K extends keyof P>(\n    event: string,\n    { envIDs, hashed, teamhashed, anonymousID, properties = {} as P }: PublicTrackOptions<P, K> = {}\n  ): Promise<void> {\n    if (!event) {\n      return Promise.resolve();\n    }\n\n    const payload = { event, envIDs, hashed, teamhashed, properties, anonymousID };\n\n    if (this.batching) {\n      return this.publicQueue.enqueue(payload);\n    }\n\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}`, this.encryptedPayload(payload)).then(Queue.voidFunc);\n    }\n\n    return this.fetch.post(`${this.endpoint}/track`, payload).then(Queue.voidFunc);\n  }\n\n  public async identify<T extends Record<string, any>, K extends keyof T>({\n    envIDs,\n    traits,\n    hashed,\n    teamhashed,\n  }: IdentifyOptions<T, K>): Promise<void> {\n    const payload = { traits, envIDs, hashed, teamhashed };\n\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}/user`, this.encryptedPayload(payload)).then(Queue.voidFunc);\n    }\n\n    return this.fetch.post(`${this.endpoint}/identify`, payload).then(Queue.voidFunc);\n  }\n\n  public async identifyWorkspace<T extends { name: string }>(id: string, properties: T): Promise<void> {\n    const payload = { ...properties, id };\n\n    if (this.encrypted) {\n      return this.fetch.post(`${this.endpoint}/workspace`, this.encryptedPayload(payload)).then(Queue.voidFunc);\n    }\n\n    return this.fetch.post(`${this.endpoint}/workspace/identify`, payload).then(Queue.voidFunc);\n  }\n}\n\nexport default Analytics;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b26b05d416316cdb4a0cf053ea8b0fc8e964a691"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/fetcher.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/fetcher.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":34}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":41}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":30}},"6":{"start":{"line":14,"column":33},"end":{"line":14,"column":37}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":81}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":58},"end":{"line":9,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":19},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":21},"end":{"line":16,"column":5}},"line":13}},"branchMap":{},"s":{"0":1,"1":329,"2":329,"3":329,"4":329,"5":76,"6":1,"7":1,"8":1},"f":{"0":329,"1":76,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/fetcher.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/fetcher.ts"],"names":[],"mappings":";;AAcA,MAAM,OAAO;IAaX,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAmC;QACnF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAA+B,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,YAAuB,CAAC;IAC9C,CAAC;IAXD,IAAc,QAAQ;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAWM,OAAO,CAAC,OAAgD;QAC7D,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAE9B,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3E,CAAC;CACF;AAED,kBAAe,OAAO,CAAC","sourcesContent":["import type Fetch from '@api-sdk/fetch';\n\ntype Clazz<Client, Options = undefined> = Options extends undefined ? new (fetch: Fetch) => Client : new (fetch: Fetch, options: Options) => Client;\n\ninterface BaseFetcherOptions<Client, Options = undefined> {\n  fetch: Fetch;\n  clazz: Clazz<Client, Options>;\n  endpoint: string;\n}\n\nexport type FetcherOptions<Client, Options = undefined> = Options extends undefined\n  ? BaseFetcherOptions<Client> & { clazzOptions?: never }\n  : BaseFetcherOptions<Client, Options> & { clazzOptions: Options };\n\nclass Fetcher<Client, Options = undefined> {\n  private readonly clazz: Clazz<Client, Options>;\n\n  private readonly clazzOptions: Options;\n\n  private readonly _endpoint: string;\n\n  protected get endpoint(): string {\n    return this._endpoint;\n  }\n\n  protected readonly fetch: Fetch;\n\n  constructor({ fetch, clazz, endpoint, clazzOptions }: FetcherOptions<Client, Options>) {\n    this.fetch = fetch;\n    this.clazz = clazz as Clazz<Client, Options>;\n    this._endpoint = endpoint;\n    this.clazzOptions = clazzOptions as Options;\n  }\n\n  public options(options: Parameters<Fetch['initWithOptions']>[0]): Client {\n    const { clazz: Clazz } = this;\n\n    return new Clazz(this.fetch.initWithOptions(options), this.clazzOptions);\n  }\n}\n\nexport default Fetcher;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"18aa20ae715ce07355bec4ef2445625489bb9902"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/queue.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/queue.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":24}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":19}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":48}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":34}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"11":{"start":{"line":21,"column":24},"end":{"line":21,"column":34}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":24}},"13":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":37}},"15":{"start":{"line":26,"column":8},"end":{"line":30,"column":11}},"16":{"start":{"line":29,"column":12},"end":{"line":29,"column":40}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":25},"end":{"line":8,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":27},"end":{"line":19,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":12},"end":{"line":31,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":19},"end":{"line":28,"column":20}},"loc":{"start":{"line":28,"column":25},"end":{"line":30,"column":9}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23}},"s":{"0":1,"1":56,"2":56,"3":56,"4":12,"5":12,"6":6,"7":6,"8":6,"9":6,"10":6,"11":10,"12":10,"13":10,"14":4,"15":6,"16":1,"17":1},"f":{"0":56,"1":12,"2":10,"3":1},"b":{"0":[6,6],"1":[4,6]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/queue.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/analytics/queue.ts"],"names":[],"mappings":";;AAAA,MAAM,KAAK;IAOT,YAAoB,OAA6D;QAA7D,YAAO,GAAP,OAAO,CAAsD;QAJzE,UAAK,GAA8B,EAAE,CAAC;QAEtC,mBAAc,GAAyB,IAAI,CAAC;IAEgC,CAAC;IAE9E,KAAK,CAAC,OAAO,CAAC,OAAgC;QACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO;SACR;QAED,8FAA8F;QAC9F,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAExC,MAAM,IAAI,CAAC,cAAc,CAAC;QAE1B,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEM,KAAK;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAE3B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACpB,KAAK,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;CACF;AAED,kBAAe,KAAK,CAAC","sourcesContent":["class Queue {\n  static voidFunc: () => undefined;\n\n  private queue: Record<string, unknown>[] = [];\n\n  private enqueuePromise: Promise<void> | null = null;\n\n  constructor(private onFlush: (payload: Record<string, unknown>[]) => Promise<any>) {}\n\n  public async enqueue(payload: Record<string, unknown>): Promise<void> {\n    this.queue.push(payload);\n\n    if (this.enqueuePromise) {\n      return;\n    }\n\n    // we await for Promise.resolve, to push all events that came in the same tick from event loop\n    this.enqueuePromise = Promise.resolve();\n\n    await this.enqueuePromise;\n\n    this.flush();\n\n    this.enqueuePromise = null;\n  }\n\n  public flush(): Promise<void> {\n    const payload = this.queue;\n\n    this.queue = [];\n\n    if (!payload.length) {\n      return Promise.resolve();\n    }\n\n    return this.onFlush(payload)\n      .then(Queue.voidFunc)\n      .catch(() => {\n        this.queue.push(...payload);\n      });\n  }\n}\n\nexport default Queue;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9ef3fdc2b49d9760f889b15ed1fcede22faad12a"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/apiKey.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/apiKey.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":27}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"7":{"start":{"line":12,"column":8},"end":{"line":16,"column":11}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":34}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":84}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":36}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":61},"end":{"line":17,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":36},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":21},"end":{"line":29,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":59}},"type":"default-arg","locations":[{"start":{"line":11,"column":57},"end":{"line":11,"column":59}}],"line":11},"4":{"loc":{"start":{"line":11,"column":25},"end":{"line":11,"column":52}},"type":"default-arg","locations":[{"start":{"line":11,"column":44},"end":{"line":11,"column":52}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":14,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":1,"1":14,"2":1,"3":1,"4":1,"5":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[14],"4":[14]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/apiKey.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/apiKey.ts"],"names":[],"mappings":";;;;;;AAGA,kDAAkC;AAElC,MAAM,QAAQ,GAAG,UAAU,CAAC;AAEf,QAAA,UAAU,GAAG,KAAK,CAAC;AAGhC,MAAM,cAAe,SAAQ,cAAiE;IAC5F,YAAY,KAAY,EAAE,EAAE,gBAAgB,GAAG,QAAQ,KAAoC,EAAE;QAC3F,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,gBAAgB;SAC3B,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,EAAU;QACzB,OAAO,KAAK,CAAC,QAAQ,CAA0B,EAAE,CAAC,CAAC;IACrD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,WAAmB,EAAE,IAAsC;QAC7E,OAAO,KAAK,CAAC,KAAK,CAAC,gCAAK,IAAI,KAAE,WAAW,GAAS,CAAC,CAAC;IACtD,CAAC;IAEM,KAAK,CAAC,MAAM,CACjB,EAAU,EACV,IAA+E;QAE/E,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAA+B,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU;QAC5B,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;CACF;AAED,kBAAe,cAAc,CAAC","sourcesContent":["import type Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport CrudResource from './crud';\n\nconst ENDPOINT = 'api-keys';\n\nexport const modelIDKey = '_id';\nexport type ModelIDKey = typeof modelIDKey;\n\nclass APIKeyResource extends CrudResource<BaseModels.ApiKey.Model, ModelIDKey, APIKeyResource> {\n  constructor(fetch: Fetch, { resourceEndpoint = ENDPOINT }: { resourceEndpoint?: string } = {}) {\n    super({\n      fetch,\n      clazz: APIKeyResource,\n      endpoint: resourceEndpoint,\n    });\n  }\n\n  public async get(id: string): Promise<BaseModels.ApiKey.Model> {\n    return super._getByID<BaseModels.ApiKey.Model>(id);\n  }\n\n  public async create(workspaceID: string, body: Partial<BaseModels.ApiKey.Model>): Promise<BaseModels.ApiKey.Model & { APIKey: string }> {\n    return super._post({ ...body, workspaceID } as any);\n  }\n\n  public async update(\n    id: string,\n    body: Pick<BaseModels.ApiKey.Model, 'name' | 'permissions' | 'scopes' | 'data'>\n  ): Promise<Partial<BaseModels.ApiKey.Model>> {\n    return super._put(id, body as BaseModels.ApiKey.Model);\n  }\n\n  public async delete(id: string): Promise<string> {\n    return super._delete(id);\n  }\n}\n\nexport default APIKeyResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"af84e814568485cd46598dd32ae8176ae0ccc2f2"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crud.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crud.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":49}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":61}},"5":{"start":{"line":12,"column":25},"end":{"line":12,"column":106}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":20}},"7":{"start":{"line":16,"column":25},"end":{"line":16,"column":108}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":20}},"9":{"start":{"line":20,"column":25},"end":{"line":20,"column":77}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"11":{"start":{"line":24,"column":25},"end":{"line":24,"column":78}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":20}},"13":{"start":{"line":28,"column":25},"end":{"line":28,"column":80}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":59}},"16":{"start":{"line":33,"column":8},"end":{"line":33,"column":18}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":25},"end":{"line":10,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":14,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":31},"end":{"line":18,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":22},"end":{"line":22,"column":5}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":25},"end":{"line":26,"column":5}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":27},"end":{"line":30,"column":5}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":22},"end":{"line":34,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":60}},"type":"cond-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":44}},{"start":{"line":9,"column":47},"end":{"line":9,"column":60}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":47,"5":2,"6":2,"7":2,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":47,"2":2,"3":2,"4":1,"5":1,"6":1,"7":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[41,6]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crud.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crud.ts"],"names":[],"mappings":";;;;;AAGA,kDAA8C;AAE9C,MAAM,YAKJ,SAAQ,cAAoB;IAClB,gBAAgB,CAAC,EAA2B;QACpD,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvD,CAAC;IAMS,KAAK,CAAC,IAAI,CAA+B,MAAe;QAChE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAExG,OAAO,IAAI,CAAC;IACd,CAAC;IAMS,KAAK,CAAC,QAAQ,CAAC,EAA0B,EAAE,MAAe;QAClE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAErG,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,KAAK,CAA+B,IAAiC;QACnF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,CAAC;QAEzE,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,IAAI,CAA+B,EAA0B,EAAE,IAAiC;QAC9G,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAE1E,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,MAAM,CAA+B,EAA0B,EAAE,IAAgB;QAC/F,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAa,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,EAA0B;QAChD,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnD,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import type { PutPostType, SchemeType } from '@api-sdk/types';\nimport type { AnyRecord } from '@voiceflow/common';\n\nimport BaseResource, { Fields } from './base';\n\nclass CrudResource<\n  Scheme extends AnyRecord,\n  ID extends keyof SchemeType<Scheme>,\n  Client extends Record<string, any>,\n  Exclude extends keyof SchemeType<Scheme> = never\n> extends BaseResource<Client> {\n  protected _getCRUDEndpoint(id?: SchemeType<Scheme>[ID]): string {\n    return id ? `${this.endpoint}/${id}` : this.endpoint;\n  }\n\n  protected async _get<T extends Partial<SchemeType<Scheme>>>(fields: Fields): Promise<T[]>;\n\n  protected async _get<T extends SchemeType<Scheme>>(): Promise<T[]>;\n\n  protected async _get<T extends SchemeType<Scheme>>(fields?: Fields) {\n    const { data } = await this.fetch.get<T[]>(`${this._getCRUDEndpoint()}${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  protected async _getByID<T extends Partial<SchemeType<Scheme>>>(id: SchemeType<Scheme>[ID], fields: Fields): Promise<T>;\n\n  protected async _getByID<T extends SchemeType<Scheme>>(id: SchemeType<Scheme>[ID]): Promise<T>;\n\n  protected async _getByID(id: SchemeType<Scheme>[ID], fields?: Fields) {\n    const { data } = await this.fetch.get(`${this._getCRUDEndpoint(id)}${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  protected async _post<T extends SchemeType<Scheme>>(body: PutPostType<T, ID, Exclude>): Promise<T> {\n    const { data } = await this.fetch.post<T>(this._getCRUDEndpoint(), body);\n\n    return data;\n  }\n\n  protected async _put<T extends SchemeType<Scheme>>(id: SchemeType<Scheme>[ID], body: PutPostType<T, ID, Exclude>): Promise<T> {\n    const { data } = await this.fetch.put<T>(this._getCRUDEndpoint(id), body);\n\n    return data;\n  }\n\n  protected async _patch<T extends SchemeType<Scheme>>(id: SchemeType<Scheme>[ID], body: Partial<T>): Promise<Partial<T>> {\n    const { data } = await this.fetch.patch<Partial<T>>(this._getCRUDEndpoint(id), body);\n\n    return data;\n  }\n\n  protected async _delete(id: SchemeType<Scheme>[ID]): Promise<SchemeType<Scheme>[ID]> {\n    await this.fetch.delete(this._getCRUDEndpoint(id));\n\n    return id;\n  }\n}\n\nexport default CrudResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d131a2ca9125403b1a9a16aeb026ae9b7a91f5b2"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/base.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/base.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":55}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":59}},"6":{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":22}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":64}},"9":{"start":{"line":18,"column":35},"end":{"line":18,"column":50}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":25},"end":{"line":10,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":28},"end":{"line":13,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":19,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":27},"end":{"line":18,"column":28}},"loc":{"start":{"line":18,"column":35},"end":{"line":18,"column":50}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":58}},"type":"cond-expr","locations":[{"start":{"line":12,"column":24},"end":{"line":12,"column":53}},{"start":{"line":12,"column":56},"end":{"line":12,"column":58}}],"line":12},"4":{"loc":{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},{"start":{"line":15,"column":8},"end":{"line":16,"column":22}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":301,"5":24,"6":3,"7":1,"8":2,"9":4,"10":1},"f":{"0":1,"1":301,"2":24,"3":3,"4":4},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[12,12],"4":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/base.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/base.ts"],"names":[],"mappings":";;;;;AAEA,wDAAoD;AAMpD,MAAM,YAA4D,SAAQ,iBAAwB;IAChG,YAAY,OAA6C;QACvD,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAES,eAAe,CAAC,MAAe;QACvC,OAAO,MAAM,CAAC,CAAC,CAAC,WAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,CAAC;IAES,YAAY,CAAC,IAAY,EAAE,GAAa;QAChD,IAAI,CAAC,GAAG,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC;QAE3B,+DAA+D;QAC/D,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;IAC1D,CAAC;CACF;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import type { AnyRecord } from '@voiceflow/common';\n\nimport Fetcher, { FetcherOptions } from './fetcher';\n\nexport type Fields = readonly string[];\n\nexport type BaseResourceOptions<Client extends AnyRecord, Options = undefined> = FetcherOptions<Client, Options>;\n\nclass BaseResource<Client extends AnyRecord, Options = undefined> extends Fetcher<Client, Options> {\n  constructor(options: BaseResourceOptions<Client, Options>) {\n    super(options);\n  }\n\n  protected _getFieldsQuery(fields?: Fields): string {\n    return fields ? `?fields=${fields.join(',')}` : '';\n  }\n\n  protected _getIDsQuery(name: string, ids: string[]): string {\n    if (!ids.length) return '';\n\n    // eslint-disable-next-line sonarjs/no-nested-template-literals\n    return `?${ids.map((id) => `${name}=${id}`).join('&')}`;\n  }\n}\n\nexport default BaseResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a32b15bd7a2cde5e122bf388fda4e2dd337e638d"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/diagram.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/diagram.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":27}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"7":{"start":{"line":12,"column":8},"end":{"line":16,"column":11}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":72}},"9":{"start":{"line":22,"column":25},"end":{"line":22,"column":81}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":33}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"13":{"start":{"line":32,"column":25},"end":{"line":32,"column":99}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"15":{"start":{"line":36,"column":25},"end":{"line":36,"column":101}},"16":{"start":{"line":37,"column":8},"end":{"line":37,"column":20}},"17":{"start":{"line":40,"column":25},"end":{"line":40,"column":96}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":33}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":71}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":19}},"22":{"start":{"line":51,"column":0},"end":{"line":51,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":17,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":26},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":21},"end":{"line":24,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":23},"end":{"line":27,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":27},"end":{"line":30,"column":5}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":39},"end":{"line":34,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":38},"end":{"line":38,"column":5}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":33},"end":{"line":42,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":21},"end":{"line":45,"column":5}},"line":43},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":26},"end":{"line":49,"column":5}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":71}},"type":"cond-expr","locations":[{"start":{"line":19,"column":24},"end":{"line":19,"column":50}},{"start":{"line":19,"column":53},"end":{"line":19,"column":71}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":20,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":1,"1":20,"2":2,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/diagram.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/diagram.ts"],"names":[],"mappings":";;;;;;AAIA,kDAAkC;AAElC,MAAM,QAAQ,GAAG,UAAU,CAAC;AAEf,QAAA,UAAU,GAAG,KAAK,CAAC;AAGhC,MAAM,eAAgB,SAAQ,cAA+E;IAC3G,YAAY,KAAY;QACtB,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IAQM,KAAK,CAAC,GAAG,CAAC,EAAU,EAAE,MAAe;QAC1C,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IAEM,KAAK,CAAC,MAAM,CAAqE,EAAU;QAChG,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAoC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAE7G,OAAO,IAAI,CAAC;IACd,CAAC;IAQM,KAAK,CAAC,MAAM,CAAC,IAAmC;QACrD,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IASM,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,IAA4C;QAC1E,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,EAAU,EACV,MAAc,EACd,IAAO;QAEP,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAiD,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;QAE5I,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,SAAS,CACpB,EAAU,EACV,MAAc,EACd,IAAgB;QAEhB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAiD,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;QAE9I,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,MAAc;QAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,MAAM,EAAE,CAAC,CAAC;QAEjG,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU;QAC5B,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,GAAa;QACnC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,cAAc,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;QAE/D,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import type Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport { Fields } from './base';\nimport CrudResource from './crud';\n\nconst ENDPOINT = 'diagrams';\n\nexport const modelIDKey = '_id';\nexport type ModelIDKey = typeof modelIDKey;\n\nclass DiagramResource extends CrudResource<BaseModels.Diagram.Model, ModelIDKey, DiagramResource, 'modified'> {\n  constructor(fetch: Fetch) {\n    super({\n      fetch,\n      clazz: DiagramResource,\n      endpoint: ENDPOINT,\n    });\n  }\n\n  public async get<T extends Partial<BaseModels.Diagram.Model>>(id: string, fields: Fields): Promise<T>;\n\n  public async get<T extends BaseModels.BaseDiagramNode = BaseModels.BaseDiagramNode>(id: string): Promise<BaseModels.Diagram.Model<T>>;\n\n  public async get<T extends BaseModels.Diagram.Model<any> = BaseModels.Diagram.Model>(id: string): Promise<T>;\n\n  public async get(id: string, fields?: Fields): Promise<BaseModels.Diagram.Model<any>> {\n    return fields ? super._getByID(id, fields) : super._getByID(id);\n  }\n\n  public async getRTC<T extends BaseModels.Diagram.Model<any> = BaseModels.Diagram.Model>(id: string): Promise<{ diagram: T; timestamp: number }> {\n    const { data } = await this.fetch.get<{ diagram: T; timestamp: number }>(`${this._getCRUDEndpoint(id)}/rtc`);\n\n    return data;\n  }\n\n  public async create<T extends BaseModels.BaseDiagramNode = BaseModels.BaseDiagramNode>(\n    body: Omit<BaseModels.Diagram.Model<T>, '_id'> & Partial<Pick<BaseModels.Diagram.Model<T>, '_id'>>\n  ): Promise<BaseModels.Diagram.Model<T>>;\n\n  public async create<T extends Omit<BaseModels.Diagram.Model<any>, '_id'>>(body: T): Promise<T & Pick<BaseModels.Diagram.Model<any>, '_id'>>;\n\n  public async create(body: BaseModels.Diagram.Model<any>): Promise<BaseModels.Diagram.Model<any>> {\n    return super._post(body);\n  }\n\n  public async update<T extends BaseModels.BaseDiagramNode = BaseModels.BaseDiagramNode>(\n    id: string,\n    body: Partial<BaseModels.Diagram.Model<T>>\n  ): Promise<Partial<BaseModels.Diagram.Model<T>>>;\n\n  public async update<T extends Partial<BaseModels.Diagram.Model<any>>>(id: string, body: T): Promise<T>;\n\n  public async update(id: string, body: Partial<BaseModels.Diagram.Model<any>>): Promise<Partial<BaseModels.Diagram.Model<any>>> {\n    return super._patch(id, body);\n  }\n\n  public async updateNode<T extends Omit<BaseModels.BaseDiagramNode, 'nodeID'>>(\n    id: string,\n    nodeID: string,\n    body: T\n  ): Promise<T & Pick<BaseModels.BaseDiagramNode, 'nodeID'>> {\n    const { data } = await this.fetch.put<T & Pick<BaseModels.BaseDiagramNode, 'nodeID'>>(`${this._getCRUDEndpoint(id)}/nodes/${nodeID}`, body);\n\n    return data;\n  }\n\n  public async patchNode<T extends Omit<BaseModels.BaseDiagramNode, 'nodeID'>>(\n    id: string,\n    nodeID: string,\n    body: Partial<T>\n  ): Promise<T & Pick<BaseModels.BaseDiagramNode, 'nodeID'>> {\n    const { data } = await this.fetch.patch<T & Pick<BaseModels.BaseDiagramNode, 'nodeID'>>(`${this._getCRUDEndpoint(id)}/nodes/${nodeID}`, body);\n\n    return data;\n  }\n\n  public async deleteNode(id: string, nodeID: string): Promise<string> {\n    const { data } = await this.fetch.delete<string>(`${this._getCRUDEndpoint(id)}/nodes/${nodeID}`);\n\n    return data;\n  }\n\n  public async delete(id: string): Promise<string> {\n    return super._delete(id);\n  }\n\n  public async deleteMany(ids: string[]): Promise<string[]> {\n    await this.fetch.post(`${this.endpoint}/remove-many`, { ids });\n\n    return ids;\n  }\n}\n\nexport default DiagramResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7c027d3cc4d3365e6bb49f38cb867c50cec8332"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/note.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/note.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":74}},"7":{"start":{"line":14,"column":25},"end":{"line":14,"column":88}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":20}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":75}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":23},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":34},"end":{"line":16,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":36},"end":{"line":19,"column":5}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":12,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":12,"2":1,"3":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/note.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/note.ts"],"names":[],"mappings":";;;;;;AAGA,kDAAkC;AAErB,QAAA,QAAQ,GAAG,OAAO,CAAC;AAIhC,MAAM,YAAa,SAAQ,cAA0B;IACnD,YAAY,KAAY;QACtB,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,gBAAQ,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEM,KAAK,CAAC,MAAM,CAAsD,SAAiB,EAAE,IAAO;QACjG,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,GAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAEpF,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,SAAiB,EAAE,MAAc;QACnD,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,MAAM,EAAE,CAAC,CAAC;IACrE,CAAC;CACF;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport BaseResource from './base';\n\nexport const ENDPOINT = 'notes';\n\nexport type ModelKey = 'id';\n\nclass NoteResource extends BaseResource<NoteResource> {\n  constructor(fetch: Fetch) {\n    super({ fetch, clazz: NoteResource, endpoint: ENDPOINT });\n  }\n\n  public async upsert<T extends BaseModels.BaseNote = BaseModels.BaseNote>(versionID: string, note: T): Promise<T> {\n    const { data } = await this.fetch.put<T>(`${this.endpoint}/${versionID}`, { note });\n\n    return data;\n  }\n\n  public async delete(versionID: string, noteID: string): Promise<void> {\n    await this.fetch.delete(`${this.endpoint}/${versionID}/${noteID}`);\n  }\n}\n\nexport default NoteResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c781018008fd79e8448d42aec300147e3518a27c"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/program.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/program.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":27}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":12,"column":8},"end":{"line":16,"column":11}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":72}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"10":{"start":{"line":25,"column":25},"end":{"line":25,"column":103}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":36}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":61},"end":{"line":17,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":26},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":23},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":27},"end":{"line":27,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":27},"end":{"line":30,"column":5}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":21},"end":{"line":33,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":59}},"type":"default-arg","locations":[{"start":{"line":11,"column":57},"end":{"line":11,"column":59}}],"line":11},"4":{"loc":{"start":{"line":11,"column":25},"end":{"line":11,"column":52}},"type":"default-arg","locations":[{"start":{"line":11,"column":44},"end":{"line":11,"column":52}}],"line":11},"5":{"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":71}},"type":"cond-expr","locations":[{"start":{"line":19,"column":24},"end":{"line":19,"column":50}},{"start":{"line":19,"column":53},"end":{"line":19,"column":71}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":28,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":28,"2":2,"3":1,"4":1,"5":1,"6":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[16],"4":[16],"5":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/program.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/program.ts"],"names":[],"mappings":";;;;;;AAIA,kDAAkC;AAElC,MAAM,QAAQ,GAAG,UAAU,CAAC;AAEf,QAAA,UAAU,GAAG,IAAI,CAAC;AAG/B,MAAM,eAAgB,SAAQ,cAAmE;IAC/F,YAAY,KAAY,EAAE,EAAE,gBAAgB,GAAG,QAAQ,KAAoC,EAAE;QAC3F,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,gBAAgB;SAC3B,CAAC,CAAC;IACL,CAAC;IAQM,KAAK,CAAC,GAAG,CAAC,EAAU,EAAE,MAAe;QAC1C,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IAUM,KAAK,CAAC,MAAM,CAAC,IAA0D;QAC5E,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,IAA4D;QAClF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAuC,GAAG,KAAK,CAAC,gBAAgB,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACtI,OAAO,IAAI,CAAC;IACd,CAAC;IASM,KAAK,CAAC,MAAM,CACjB,EAAU,EACV,IAA0D;QAE1D,OAAO,KAAK,CAAC,IAAI,CAAqC,EAAE,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU;QAC5B,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import type Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport { Fields } from './base';\nimport CrudResource from './crud';\n\nconst ENDPOINT = 'programs';\n\nexport const modelIDKey = 'id';\nexport type ModelIDKey = typeof modelIDKey;\n\nclass ProgramResource extends CrudResource<BaseModels.Program.Model, ModelIDKey, ProgramResource> {\n  constructor(fetch: Fetch, { resourceEndpoint = ENDPOINT }: { resourceEndpoint?: string } = {}) {\n    super({\n      fetch,\n      clazz: ProgramResource,\n      endpoint: resourceEndpoint,\n    });\n  }\n\n  public async get<T extends Partial<BaseModels.Program.Model>>(id: string, fields: Fields): Promise<T>;\n\n  public async get<T extends BaseModels.BaseNode, C extends BaseModels.BaseCommand>(id: string): Promise<BaseModels.Program.Model<T, C>>;\n\n  public async get<T extends BaseModels.Program.Model<any, any> = BaseModels.Program.Model>(id: string): Promise<T>;\n\n  public async get(id: string, fields?: Fields): Promise<BaseModels.Program.Model<any, any>> {\n    return fields ? super._getByID(id, fields) : super._getByID(id);\n  }\n\n  async create<T extends BaseModels.BaseNode, C extends BaseModels.BaseCommand>(\n    body: Omit<BaseModels.Program.Model<T, C>, ModelIDKey>\n  ): Promise<BaseModels.Program.Model<T, C>>;\n\n  async create<T extends Omit<BaseModels.Program.Model<any, any>, ModelIDKey>>(\n    body: T\n  ): Promise<T & Pick<BaseModels.Program.Model<any, any>, ModelIDKey>>;\n\n  public async create(body: Omit<BaseModels.Program.Model<any, any>, ModelIDKey>): Promise<BaseModels.Program.Model<any, any>> {\n    return super._post(body);\n  }\n\n  public async createMany(body: Omit<BaseModels.Program.Model<any, any>, ModelIDKey>[]): Promise<BaseModels.Program.Model<any, any>[]> {\n    const { data } = await this.fetch.post<BaseModels.Program.Model<any, any>[]>(`${super._getCRUDEndpoint()}/batch`, { programs: body });\n    return data;\n  }\n\n  public async update<T extends BaseModels.BaseNode, C extends BaseModels.BaseCommand>(\n    id: string,\n    body: Omit<BaseModels.Program.Model<T, C>, ModelIDKey>\n  ): Promise<Omit<BaseModels.Program.Model<T, C>, ModelIDKey>>;\n\n  public async update<T extends Omit<BaseModels.Program.Model<any, any>, ModelIDKey>>(id: string, body: T): Promise<T>;\n\n  public async update(\n    id: string,\n    body: Omit<BaseModels.Program.Model<any, any>, ModelIDKey>\n  ): Promise<Omit<BaseModels.Program.Model<any, any>, ModelIDKey>> {\n    return super._put<BaseModels.Program.Model<any, any>>(id, body);\n  }\n\n  public async delete(id: string): Promise<string> {\n    return super._delete(id);\n  }\n}\n\nexport default ProgramResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3326eb0e0fb75f7fa19373d5c58743d08e46d40"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/index.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":53}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"8":{"start":{"line":13,"column":8},"end":{"line":17,"column":11}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":50}},"10":{"start":{"line":21,"column":25},"end":{"line":21,"column":114}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":20}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":72}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"16":{"start":{"line":37,"column":25},"end":{"line":37,"column":94}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"18":{"start":{"line":41,"column":25},"end":{"line":41,"column":117}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"20":{"start":{"line":45,"column":43},"end":{"line":45,"column":50}},"21":{"start":{"line":46,"column":25},"end":{"line":46,"column":125}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"23":{"start":{"line":50,"column":25},"end":{"line":50,"column":87}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"25":{"start":{"line":54,"column":25},"end":{"line":54,"column":98}},"26":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"27":{"start":{"line":58,"column":0},"end":{"line":58,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":23},"end":{"line":19,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":36},"end":{"line":23,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":26},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":23},"end":{"line":29,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":27},"end":{"line":32,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":21},"end":{"line":35,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":39},"end":{"line":39,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":34},"end":{"line":43,"column":5}},"line":40},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":42},"end":{"line":48,"column":5}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":27},"end":{"line":52,"column":5}},"line":49},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":36},"end":{"line":56,"column":5}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":71}},"type":"cond-expr","locations":[{"start":{"line":25,"column":24},"end":{"line":25,"column":50}},{"start":{"line":25,"column":53},"end":{"line":25,"column":71}}],"line":25},"4":{"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":40}},"type":"default-arg","locations":[{"start":{"line":44,"column":38},"end":{"line":44,"column":40}}],"line":44},"5":{"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":26}},"type":"default-arg","locations":[{"start":{"line":45,"column":25},"end":{"line":45,"column":26}}],"line":45},"6":{"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":38}},"type":"default-arg","locations":[{"start":{"line":45,"column":36},"end":{"line":45,"column":38}}],"line":45}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":25,"9":25,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"17":1,"18":2,"19":2,"20":3,"21":3,"22":3,"23":1,"24":1,"25":1,"26":1,"27":1},"f":{"0":2,"1":25,"2":2,"3":2,"4":1,"5":1,"6":1,"7":1,"8":2,"9":3,"10":1,"11":1},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[1,1],"4":[1],"5":[2],"6":[2]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/index.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\nimport { AnyRecord } from '@voiceflow/common';\n\nimport { Fields } from '../base';\nimport CrudResource from '../crud';\nimport { ENDPOINT } from './constants';\nimport MemberResource from './member';\n\nexport const modelIDKey = '_id';\nexport type ModelIDKey = typeof modelIDKey;\n\nclass ProjectResource extends CrudResource<BaseModels.Project.Model<AnyRecord, AnyRecord>, ModelIDKey, ProjectResource, 'creatorID'> {\n  public member: MemberResource;\n\n  constructor(fetch: Fetch) {\n    super({\n      fetch,\n      clazz: ProjectResource,\n      endpoint: ENDPOINT,\n    });\n\n    this.member = new MemberResource(fetch);\n  }\n\n  public async list<P extends Partial<BaseModels.Project.Model<AnyRecord, AnyRecord>>>(workspaceID: string, fields: Fields): Promise<P[]>;\n\n  public async list<P extends AnyRecord, M extends AnyRecord>(workspaceID: string): Promise<BaseModels.Project.Model<P, M>[]>;\n\n  public async list<P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>>(workspaceID: string): Promise<P[]>;\n\n  public async list(\n    workspaceID: string,\n    fields?: Fields\n  ): Promise<BaseModels.Project.Model<any, any>[] | Partial<BaseModels.Project.Model<any, any>>[]> {\n    const { data } = await this.fetch.get<BaseModels.Project.Model<any, any>[] | Partial<BaseModels.Project.Model<any, any>>[]>(\n      `workspaces/${workspaceID}/projects${this._getFieldsQuery(fields)}`\n    );\n\n    return data;\n  }\n\n  public async get<P extends Partial<BaseModels.Project.Model<AnyRecord, AnyRecord>>>(id: string, fields: Fields): Promise<P>;\n\n  public async get<P extends AnyRecord, M extends AnyRecord>(id: string): Promise<BaseModels.Project.Model<P, M>>;\n\n  public async get<P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>>(id: string): Promise<P>;\n\n  public async get(id: string, fields?: Fields): Promise<BaseModels.Project.Model<any, any> | Partial<BaseModels.Project.Model<any, any>>> {\n    return fields ? super._getByID(id, fields) : super._getByID(id);\n  }\n\n  public async create<P extends AnyRecord, M extends AnyRecord>(\n    body: Omit<BaseModels.Project.Model<P, M>, ModelIDKey | 'creatorID'>\n  ): Promise<BaseModels.Project.Model<P, M>>;\n\n  public async create<P extends Omit<BaseModels.Project.Model<any, any>, ModelIDKey | 'creatorID'>>(\n    body: P\n  ): Promise<P & Pick<BaseModels.Project.Model<any, any>, ModelIDKey | 'creatorID'>>;\n\n  public async create(body: Omit<BaseModels.Project.Model<any, any>, ModelIDKey | 'creatorID'>): Promise<BaseModels.Project.Model<any, any>> {\n    return super._post(body);\n  }\n\n  public async update<P extends AnyRecord, M extends AnyRecord>(\n    id: string,\n    body: Partial<BaseModels.Project.Model<P, M>>\n  ): Promise<Partial<BaseModels.Project.Model<P, M>>>;\n\n  public async update<P extends Partial<BaseModels.Project.Model<any, any>>>(id: string, body: P): Promise<P>;\n\n  public async update(id: string, body: Partial<BaseModels.Project.Model<any, any>>): Promise<Partial<BaseModels.Project.Model<any, any>>> {\n    return super._patch(id, body);\n  }\n\n  public async delete(id: string): Promise<string> {\n    return super._delete(id);\n  }\n\n  public async updatePlatformData<P extends Partial<AnyRecord>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/platform`, body);\n\n    return data;\n  }\n\n  public async getVersions<P extends Partial<BaseModels.Version.Model<BaseModels.Version.PlatformData>>>(id: string, fields: Fields): Promise<P[]>;\n\n  public async getVersions<P extends BaseModels.Version.Model<any> = BaseModels.Version.Model<BaseModels.Version.PlatformData>>(\n    id: string\n  ): Promise<P[]>;\n\n  public async getVersions<P extends BaseModels.Version.PlatformData>(id: string): Promise<BaseModels.Version.Model<P>[]>;\n\n  public async getVersions(id: string, fields?: Fields): Promise<BaseModels.Version.Model<any>[]> {\n    const { data } = await this.fetch.get<BaseModels.Version.Model<any>[]>(`${this._getCRUDEndpoint(id)}/versions${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  public async getVersionsV2<P extends BaseModels.Version.PlatformData>(\n    id: string,\n    options?: { offset?: number; limit?: number }\n  ): Promise<BaseModels.Version.Model<P>[]>;\n\n  public async getVersionsV2(id: string, options: { offset?: number; limit?: number } = {}): Promise<BaseModels.Version.Model<any>[]> {\n    const { offset = 0, limit = 10 } = options;\n    const { data } = await this.fetch.get<BaseModels.Version.Model<any>[]>(\n      `${this._getCRUDEndpoint(id)}/projectVersions?offset=${offset}&limit=${limit}`\n    );\n\n    return data;\n  }\n\n  public async getPrototype<P extends BaseModels.Project.Prototype>(id: string): Promise<P> {\n    const { data } = await this.fetch.get<P>(`${this._getCRUDEndpoint(id)}/prototype`);\n\n    return data;\n  }\n\n  public async getCreator<\n    P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>,\n    V extends BaseModels.Version.Model<any, any, string> = BaseModels.Version.Model<BaseModels.Version.PlatformData>,\n    D extends BaseModels.Diagram.Model<any> = BaseModels.Diagram.Model,\n    VS extends BaseModels.VariableState.Model = BaseModels.VariableState.Model\n  >(id: string, versionID: string): Promise<{ project: P; version: V; diagrams: D[]; variableStates: VS[] }> {\n    const { data } = await this.fetch.get<{ project: P; version: V; diagrams: D[]; variableStates: VS[] }>(\n      `${this._getCRUDEndpoint(id)}/creator/${versionID}`\n    );\n\n    return data;\n  }\n}\n\nexport default ProjectResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3bc92b9b2fd5801676386ddc41187d59590c9957"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/constants.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/constants.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/constants.ts"],"names":[],"mappings":";;;AAAa,QAAA,QAAQ,GAAG,UAAU,CAAC","sourcesContent":["export const ENDPOINT = 'projects';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"25858e901a9e72bbc7d04b06169c5b0b03bbf39f"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/member.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/member.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"7":{"start":{"line":12,"column":8},"end":{"line":16,"column":11}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":48}},"9":{"start":{"line":22,"column":25},"end":{"line":22,"column":115}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":26,"column":25},"end":{"line":26,"column":116}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":20}},"13":{"start":{"line":30,"column":25},"end":{"line":30,"column":86}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":20}},"15":{"start":{"line":34,"column":25},"end":{"line":34,"column":85}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"17":{"start":{"line":38,"column":25},"end":{"line":38,"column":82}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":20}},"19":{"start":{"line":42,"column":25},"end":{"line":42,"column":140}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"21":{"start":{"line":46,"column":25},"end":{"line":46,"column":143}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"23":{"start":{"line":50,"column":25},"end":{"line":50,"column":147}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"25":{"start":{"line":54,"column":0},"end":{"line":54,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":17,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":25},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":34},"end":{"line":24,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":33},"end":{"line":28,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":34},"end":{"line":32,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":34},"end":{"line":36,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":28},"end":{"line":40,"column":5}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":65},"end":{"line":44,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":68},"end":{"line":48,"column":5}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":61},"end":{"line":52,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":36,"8":9,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":1,"1":36,"2":9,"3":2,"4":2,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/member.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/project/member.ts"],"names":[],"mappings":"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","sourcesContent":["import Fetch, { PathVariables } from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\nimport { AnyRecord } from '@voiceflow/common';\n\nimport BaseResource, { Fields } from '../base';\nimport { ENDPOINT } from './constants';\n\nexport const modelIDKey = 'creatorID';\nexport type ModelIDKey = typeof modelIDKey;\n\nclass MemberResource extends BaseResource<MemberResource> {\n  constructor(fetch: Fetch) {\n    super({\n      fetch,\n      clazz: MemberResource,\n      endpoint: ENDPOINT,\n    });\n  }\n\n  protected _getCRUDEndpoint(id: string): string {\n    return `${this.endpoint}/${id}/members`;\n  }\n\n  public async list<P extends Partial<BaseModels.Project.Member>>(projectID: string, fields: Fields): Promise<P[]>;\n\n  public async list<P extends BaseModels.Project.Member<any> = BaseModels.Project.Member>(projectID: string): Promise<P[]>;\n\n  public async list<P extends AnyRecord>(projectID: string): Promise<BaseModels.Project.Member<P>[]>;\n\n  public async list(projectID: string, fields?: Fields): Promise<BaseModels.Project.Member<any>[] | Partial<BaseModels.Project.Member<any>>[]> {\n    const { data } = await this.fetch.get<BaseModels.Project.Member<any>[] | Partial<BaseModels.Project.Member<any>>[]>(\n      `${this._getCRUDEndpoint(projectID)}${this._getFieldsQuery(fields)}`\n    );\n\n    return data;\n  }\n\n  public async get<P extends Partial<BaseModels.Project.Member>>(projectID: string, fields: Fields): Promise<P>;\n\n  public async get<P extends BaseModels.Project.Member<any> = BaseModels.Project.Member>(projectID: string, fields: Fields): Promise<P>;\n\n  public async get<P extends AnyRecord>(projectID: string): Promise<BaseModels.Project.Member<P>>;\n\n  public async get(projectID: string, fields?: Fields): Promise<BaseModels.Project.Member<any> | Partial<BaseModels.Project.Member<any>>> {\n    const { data } = await this.fetch.get<BaseModels.Project.Member<any> | Partial<BaseModels.Project.Member<any>>>(\n      `${this.endpoint}/${projectID}/member${this._getFieldsQuery(fields)}`\n    );\n\n    return data;\n  }\n\n  public async create<P extends AnyRecord>(\n    projectID: string,\n    body: Omit<BaseModels.Project.Member<P>, ModelIDKey>\n  ): Promise<BaseModels.Project.Member<P>>;\n\n  public async create<P extends Omit<BaseModels.Project.Member<any>, ModelIDKey>>(\n    projectID: string,\n    body: P\n  ): Promise<P & Pick<BaseModels.Project.Member<any>, ModelIDKey>>;\n\n  public async create(projectID: string, body: Omit<BaseModels.Project.Member<any>, ModelIDKey>): Promise<BaseModels.Project.Member<any>> {\n    const { data } = await this.fetch.post<BaseModels.Project.Member<any>>(this._getCRUDEndpoint(projectID), body);\n\n    return data;\n  }\n\n  public async update<P extends AnyRecord>(\n    projectID: string,\n    body: Omit<BaseModels.Project.Member<P>, ModelIDKey>\n  ): Promise<BaseModels.Project.Member<P>>;\n\n  public async update<P extends Omit<BaseModels.Project.Member<any>, ModelIDKey>>(\n    projectID: string,\n    body: P\n  ): Promise<P & Pick<BaseModels.Project.Member<any>, ModelIDKey>>;\n\n  public async update(projectID: string, body: Omit<BaseModels.Project.Member<any>, ModelIDKey>): Promise<BaseModels.Project.Member<any>> {\n    const { data } = await this.fetch.put<BaseModels.Project.Member<any>>(this._getCRUDEndpoint(projectID), body);\n\n    return data;\n  }\n\n  public async delete(projectID: string): Promise<number> {\n    const { data } = await this.fetch.delete<number>(this._getCRUDEndpoint(projectID));\n\n    return data;\n  }\n\n  public async platformDataAdd<P>(projectID: string, path: string, value: P, pathVariables?: PathVariables): Promise<P> {\n    const { data } = await this.fetch.granularPatch<P>(`${this._getCRUDEndpoint(projectID)}/platform-data/add`, path, value, pathVariables);\n\n    return data;\n  }\n\n  public async platformDataUpdate<P>(projectID: string, path: string, value: P, pathVariables?: PathVariables): Promise<P> {\n    const { data } = await this.fetch.granularPatch<P>(`${this._getCRUDEndpoint(projectID)}/platform-data/update`, path, value, pathVariables);\n\n    return data;\n  }\n\n  public async platformDataRemove<P>(projectID: string, path: string, pathVariables?: PathVariables): Promise<P> {\n    const { data } = await this.fetch.granularPatch<P>(`${this._getCRUDEndpoint(projectID)}/platform-data/remove`, path, undefined, pathVariables);\n\n    return data;\n  }\n}\n\nexport default MemberResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0938797fd84c5357044c39fbbac8b8fc46465ef2"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/prototypeProgram.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/prototypeProgram.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":53}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":23},"end":{"line":11,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":12,"6":1},"f":{"0":1,"1":12},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/prototypeProgram.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/prototypeProgram.ts"],"names":[],"mappings":";;;;;AAEA,wDAAwC;AAExC,MAAM,QAAQ,GAAG,oBAAoB,CAAC;AAEtC,MAAM,wBAAyB,SAAQ,iBAAe;IACpD,YAAY,KAAY;QACtB,KAAK,CAAC,KAAK,EAAE,EAAE,gBAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC/C,CAAC;CACF;AAED,kBAAe,wBAAwB,CAAC","sourcesContent":["import type Fetch from '@api-sdk/fetch';\n\nimport ProgramResource from './program';\n\nconst ENDPOINT = 'prototype-programs';\n\nclass PrototypeProgramResource extends ProgramResource {\n  constructor(fetch: Fetch) {\n    super(fetch, { resourceEndpoint: ENDPOINT });\n  }\n}\n\nexport default PrototypeProgramResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0ac73694dc2af93a4380dcb970d47fb2f3ccb1cd"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/user.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/user.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":18},"end":{"line":15,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":14,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":48}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":20}},"9":{"start":{"line":16,"column":17},"end":{"line":26,"column":1}},"10":{"start":{"line":17,"column":15},"end":{"line":17,"column":41}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"13":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":44}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":16}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":28}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":27}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":24}},"20":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"21":{"start":{"line":34,"column":40},"end":{"line":34,"column":76}},"22":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":29}},"24":{"start":{"line":37,"column":12},"end":{"line":37,"column":31}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":47}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":18},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":29},"end":{"line":15,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":17},"end":{"line":16,"column":18}},"loc":{"start":{"line":16,"column":28},"end":{"line":26,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":31},"end":{"line":39,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":28},"end":{"line":42,"column":5}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"4":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"5":{"loc":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},{"start":{"line":33,"column":8},"end":{"line":38,"column":9}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":12,"7":12,"8":2,"9":1,"10":11,"11":11,"12":1,"13":11,"14":1,"15":10,"16":1,"17":12,"18":12,"19":12,"20":12,"21":11,"22":10,"23":10,"24":10,"25":12,"26":1},"f":{"0":1,"1":12,"2":11,"3":12,"4":12},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,10],"4":[1,10],"5":[11,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/user.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/user.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAmC;AAEnC,MAAM,SAAS,GAAG,CAAI,KAAa,EAAY,EAAE;IAC/C,IAAI;QACF,OAAO,IAAA,oBAAS,EAAC,KAAK,CAAM,CAAC;KAC9B;IAAC,WAAM;QACN,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAEK,MAAM,QAAQ,GAAG,CAAI,KAAa,EAAK,EAAE;IAC9C,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,mDAAmD;IACnD,IAAI,CAAC,IAAI,EAAE;QACT,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;KACzB;IACD,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC;KACrC;IACD,OAAO,IAAoB,CAAC;AAC9B,CAAC,CAAC;AAVW,QAAA,QAAQ,YAUnB;AASF,MAAM,IAAI;IAOR,YAAY,aAAqB;QAN1B,cAAS,GAAG,CAAC,CAAC;QAEd,SAAI,GAAG,EAAE,CAAC;QAEV,UAAK,GAAG,EAAE,CAAC;QAGhB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YACjC,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAA,gBAAQ,EAAY,aAAa,CAAC,CAAC;YAE/D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,QAAQ,CAAC,aAAqB;QAC5B,OAAO,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;CACF;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nconst decodeJWT = <S>(token: string): S | null => {\n  try {\n    return jwtDecode(token) as S;\n  } catch {\n    return null;\n  }\n};\n\nexport const parseJWT = <S>(token: string): S => {\n  let user = decodeJWT(token.slice(16));\n  // try again without assuming the userHash is there\n  if (!user) {\n    user = decodeJWT(token);\n  }\n  if (!user) {\n    throw new RangeError('Invalid JWT');\n  }\n  return user as unknown as S;\n};\n\ninterface UserToken {\n  id: number;\n  name: string;\n  email: string;\n  admin: number;\n}\n\nclass User {\n  public creatorID = 0;\n\n  public name = '';\n\n  public email = '';\n\n  constructor(authorization: string) {\n    if (!this.isAPIKey(authorization)) {\n      const { id, name, email } = parseJWT<UserToken>(authorization);\n\n      this.creatorID = id;\n      this.name = name;\n      this.email = email;\n    }\n  }\n\n  isAPIKey(authorization: string): boolean {\n    return authorization.startsWith('VF.');\n  }\n}\n\nexport default User;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab77a45d6373eaaed7ba7b8f77d077d4e3d0a103"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/variableState.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/variableState.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":11,"column":8},"end":{"line":15,"column":11}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":72}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":23},"end":{"line":16,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":26},"end":{"line":19,"column":5}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":15},"end":{"line":18,"column":71}},"type":"cond-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":50}},{"start":{"line":18,"column":53},"end":{"line":18,"column":71}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":12,"7":2,"8":1},"f":{"0":1,"1":12,"2":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/variableState.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/variableState.ts"],"names":[],"mappings":";;;;;;AAIA,kDAAkC;AAErB,QAAA,QAAQ,GAAG,iBAAiB,CAAC;AAI1C,MAAM,qBAAsB,SAAQ,cAAmG;IACrI,YAAY,KAAY;QACtB,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,qBAAqB;YAC5B,QAAQ,EAAE,gBAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IAMM,KAAK,CAAC,GAAG,CAAC,EAAU,EAAE,MAAe;QAC1C,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;CACF;AAED,kBAAe,qBAAqB,CAAC","sourcesContent":["import Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport { Fields } from './base';\nimport CrudResource from './crud';\n\nexport const ENDPOINT = 'variable-states';\n\nexport type ModelKey = '_id';\n\nclass VariableStateResource extends CrudResource<BaseModels.VariableState.Model, ModelKey, VariableStateResource, 'projectID' | 'name'> {\n  constructor(fetch: Fetch) {\n    super({\n      fetch,\n      clazz: VariableStateResource,\n      endpoint: ENDPOINT,\n    });\n  }\n\n  public async get<T extends Partial<BaseModels.VariableState.Model>>(id: string, fields: Fields): Promise<T>;\n\n  public async get<T extends BaseModels.VariableState.Model = BaseModels.VariableState.Model>(id: string): Promise<T>;\n\n  public async get(id: string, fields?: Fields): Promise<BaseModels.VariableState.Model> {\n    return fields ? super._getByID(id, fields) : super._getByID(id);\n  }\n}\n\nexport default VariableStateResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff1e3db50c1d966ae312ac89f727b0592e2dd3e0"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/index.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":69}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":53}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"8":{"start":{"line":13,"column":8},"end":{"line":17,"column":11}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":88}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":104}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":72}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":33}},"15":{"start":{"line":34,"column":25},"end":{"line":34,"column":94}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"17":{"start":{"line":38,"column":25},"end":{"line":38,"column":116}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":20}},"19":{"start":{"line":42,"column":25},"end":{"line":42,"column":118}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"21":{"start":{"line":46,"column":25},"end":{"line":46,"column":103}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"23":{"start":{"line":50,"column":25},"end":{"line":50,"column":117}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"25":{"start":{"line":54,"column":25},"end":{"line":54,"column":127}},"26":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"27":{"start":{"line":58,"column":25},"end":{"line":58,"column":117}},"28":{"start":{"line":59,"column":8},"end":{"line":59,"column":20}},"29":{"start":{"line":62,"column":25},"end":{"line":62,"column":138}},"30":{"start":{"line":63,"column":8},"end":{"line":63,"column":20}},"31":{"start":{"line":66,"column":25},"end":{"line":66,"column":101}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"33":{"start":{"line":70,"column":25},"end":{"line":70,"column":176}},"34":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"35":{"start":{"line":74,"column":25},"end":{"line":74,"column":94}},"36":{"start":{"line":75,"column":8},"end":{"line":75,"column":20}},"37":{"start":{"line":78,"column":37},"end":{"line":78,"column":118}},"38":{"start":{"line":79,"column":8},"end":{"line":79,"column":26}},"39":{"start":{"line":82,"column":22},"end":{"line":82,"column":71}},"40":{"start":{"line":83,"column":25},"end":{"line":83,"column":95}},"41":{"start":{"line":84,"column":8},"end":{"line":84,"column":20}},"42":{"start":{"line":87,"column":25},"end":{"line":87,"column":95}},"43":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}},"44":{"start":{"line":91,"column":25},"end":{"line":91,"column":117}},"45":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}},"46":{"start":{"line":95,"column":25},"end":{"line":95,"column":105}},"47":{"start":{"line":96,"column":8},"end":{"line":96,"column":20}},"48":{"start":{"line":99,"column":25},"end":{"line":99,"column":92}},"49":{"start":{"line":100,"column":8},"end":{"line":100,"column":20}},"50":{"start":{"line":103,"column":25},"end":{"line":103,"column":104}},"51":{"start":{"line":104,"column":8},"end":{"line":104,"column":20}},"52":{"start":{"line":110,"column":25},"end":{"line":110,"column":100}},"53":{"start":{"line":111,"column":8},"end":{"line":111,"column":20}},"54":{"start":{"line":114,"column":0},"end":{"line":114,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":23},"end":{"line":20,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":26},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":23},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":27},"end":{"line":29,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":21},"end":{"line":32,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":39},"end":{"line":36,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":47},"end":{"line":40,"column":5}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":49},"end":{"line":44,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":44},"end":{"line":48,"column":5}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":34},"end":{"line":52,"column":5}},"line":49},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":43},"end":{"line":56,"column":5}},"line":53},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":34},"end":{"line":60,"column":5}},"line":57},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":50},"end":{"line":64,"column":5}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":39},"end":{"line":68,"column":5}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":30},"end":{"line":72,"column":5}},"line":69},"16":{"name":"(anonymous_16)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":30},"end":{"line":76,"column":5}},"line":73},"17":{"name":"(anonymous_17)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":36},"end":{"line":80,"column":5}},"line":77},"18":{"name":"(anonymous_18)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":38},"end":{"line":85,"column":5}},"line":81},"19":{"name":"(anonymous_19)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":36},"end":{"line":89,"column":5}},"line":86},"20":{"name":"(anonymous_20)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":44},"end":{"line":93,"column":5}},"line":90},"21":{"name":"(anonymous_21)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":46},"end":{"line":97,"column":5}},"line":94},"22":{"name":"(anonymous_22)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":31},"end":{"line":101,"column":5}},"line":98},"23":{"name":"(anonymous_23)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":38},"end":{"line":105,"column":5}},"line":102},"24":{"name":"(anonymous_24)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":34},"end":{"line":112,"column":5}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":71}},"type":"cond-expr","locations":[{"start":{"line":22,"column":24},"end":{"line":22,"column":50}},{"start":{"line":22,"column":53},"end":{"line":22,"column":71}}],"line":22},"4":{"loc":{"start":{"line":70,"column":84},"end":{"line":70,"column":173}},"type":"cond-expr","locations":[{"start":{"line":70,"column":155},"end":{"line":70,"column":168}},{"start":{"line":70,"column":171},"end":{"line":70,"column":173}}],"line":70},"5":{"loc":{"start":{"line":70,"column":85},"end":{"line":70,"column":151}},"type":"cond-expr","locations":[{"start":{"line":70,"column":126},"end":{"line":70,"column":132}},{"start":{"line":70,"column":135},"end":{"line":70,"column":151}}],"line":70},"6":{"loc":{"start":{"line":70,"column":85},"end":{"line":70,"column":123}},"type":"binary-expr","locations":[{"start":{"line":70,"column":85},"end":{"line":70,"column":101}},{"start":{"line":70,"column":105},"end":{"line":70,"column":123}}],"line":70},"7":{"loc":{"start":{"line":81,"column":27},"end":{"line":81,"column":36}},"type":"default-arg","locations":[{"start":{"line":81,"column":34},"end":{"line":81,"column":36}}],"line":81},"8":{"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":71}},"type":"cond-expr","locations":[{"start":{"line":82,"column":38},"end":{"line":82,"column":66}},{"start":{"line":82,"column":69},"end":{"line":82,"column":71}}],"line":82}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":39,"9":39,"10":39,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":1,"30":1,"31":1,"32":1,"33":2,"34":2,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":2,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1},"f":{"0":3,"1":39,"2":2,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":2,"12":2,"13":1,"14":1,"15":2,"16":1,"17":1,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[1,1],"4":[1,1],"5":[1,1],"6":[2,2],"7":[1],"8":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/index.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/index.ts"],"names":[],"mappings":"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","sourcesContent":["import Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\nimport { AnyRecord } from '@voiceflow/common';\n\nimport { Fields } from '../base';\nimport CrudResource from '../crud';\nimport CanvasTemplate from './canvasTemplate';\nimport Domain from './domain';\n\nexport const ENDPOINT = 'versions';\n\nexport type ModelKey = '_id';\n\nclass VersionResource extends CrudResource<BaseModels.Version.Model<BaseModels.Version.PlatformData>, ModelKey, VersionResource, 'creatorID'> {\n  public domain: Domain;\n\n  public canvasTemplate: CanvasTemplate;\n\n  constructor(fetch: Fetch) {\n    super({\n      fetch,\n      clazz: VersionResource,\n      endpoint: ENDPOINT,\n    });\n\n    this.domain = new Domain(fetch, { parentEndpoint: ENDPOINT });\n    this.canvasTemplate = new CanvasTemplate(fetch, { parentEndpoint: ENDPOINT });\n  }\n\n  public async get<T extends Partial<BaseModels.Version.Model<BaseModels.Version.PlatformData>>>(id: string, fields: Fields): Promise<T>;\n\n  public async get<P extends BaseModels.Version.PlatformData>(id: string): Promise<BaseModels.Version.Model<P>>;\n\n  public async get<T extends BaseModels.Version.Model<any, any, string> = BaseModels.Version.Model<BaseModels.Version.PlatformData>>(\n    id: string\n  ): Promise<T>;\n\n  public async get(id: string, fields?: Fields): Promise<BaseModels.Version.Model<any, any, string>> {\n    return fields ? super._getByID(id, fields) : super._getByID(id);\n  }\n\n  public async create<P extends BaseModels.Version.PlatformData>(\n    body: Omit<BaseModels.Version.Model<P>, ModelKey | 'creatorID'>\n  ): Promise<BaseModels.Version.Model<P>>;\n\n  public async create<P extends Omit<BaseModels.Version.Model<any, any, string>, ModelKey | 'creatorID'>>(\n    body: P\n  ): Promise<P & Pick<BaseModels.Version.Model<any, any, string>, ModelKey | 'creatorID'>>;\n\n  public async create(\n    body: Omit<BaseModels.Version.Model<any, any, string>, ModelKey | 'creatorID'>\n  ): Promise<BaseModels.Version.Model<any, any, string>> {\n    return super._post(body);\n  }\n\n  public async update<P extends BaseModels.Version.PlatformData>(\n    id: string,\n    body: Partial<BaseModels.Version.Model<P>>\n  ): Promise<Partial<BaseModels.Version.Model<P>>>;\n\n  public async update<P extends Partial<BaseModels.Version.Model<any, any, string>>>(id: string, body: P): Promise<P>;\n\n  public async update(\n    id: string,\n    body: Partial<BaseModels.Version.Model<any, any, string>>\n  ): Promise<Partial<BaseModels.Version.Model<any, any, string>>> {\n    return super._patch(id, body);\n  }\n\n  public async delete(id: string): Promise<string> {\n    return super._delete(id);\n  }\n\n  public async updatePlatformData<P extends Partial<BaseModels.Version.PlatformData>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/platform`, body);\n\n    return data;\n  }\n\n  public async updatePlatformDataSettings<P extends Partial<BaseModels.Version.PlatformData['settings']>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/platform`, body, { path: 'settings' });\n\n    return data;\n  }\n\n  public async updatePlatformDataPublishing<P extends Partial<BaseModels.Version.PlatformData['publishing']>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/platform`, body, { path: 'publishing' });\n\n    return data;\n  }\n\n  public async updateDefaultStepColors<P extends BaseModels.Version.DefaultStepColors>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/defaultStepColors`, body);\n\n    return data;\n  }\n\n  public async getPrograms<T extends Partial<BaseModels.Program.Model>>(id: string, fields: Fields): Promise<T[]>;\n\n  public async getPrograms<T extends BaseModels.Program.Model<any> = BaseModels.Program.Model>(id: string): Promise<T[]>;\n\n  public async getPrograms(id: string, fields?: Fields): Promise<BaseModels.Program.Model[]> {\n    const { data } = await this.fetch.get<BaseModels.Program.Model[]>(`${this._getCRUDEndpoint(id)}/programs${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  public async getPrototypePrograms<T extends Partial<BaseModels.Program.Model>>(id: string, fields: Fields): Promise<T[]>;\n\n  public async getPrototypePrograms<T extends BaseModels.Program.Model<any> = BaseModels.Program.Model>(id: string): Promise<T[]>;\n\n  public async getPrototypePrograms(id: string, fields?: Fields): Promise<BaseModels.Program.Model[]> {\n    const { data } = await this.fetch.get<BaseModels.Program.Model[]>(\n      `${this._getCRUDEndpoint(id)}/prototype-programs${this._getFieldsQuery(fields)}`\n    );\n\n    return data;\n  }\n\n  public async getDiagrams<T extends Partial<BaseModels.Diagram.Model>>(id: string, fields: Fields): Promise<T[]>;\n\n  public async getDiagrams<T extends BaseModels.Diagram.Model<any> = BaseModels.Diagram.Model>(id: string): Promise<T[]>;\n\n  public async getDiagrams(id: string, fields?: Fields): Promise<BaseModels.Diagram.Model[]> {\n    const { data } = await this.fetch.get<BaseModels.Diagram.Model[]>(`${this._getCRUDEndpoint(id)}/diagrams${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  public async getDiagramsByIDs<T extends BaseModels.BaseDiagramNode = BaseModels.BaseDiagramNode>(\n    versionId: string,\n    diagramIds: string[]\n  ): Promise<BaseModels.Diagram.Model<T>[]>;\n\n  public async getDiagramsByIDs<T extends BaseModels.Diagram.Model<any> = BaseModels.Diagram.Model>(\n    versionId: string,\n    diagramIds: string[]\n  ): Promise<T[]>;\n\n  public async getDiagramsByIDs(versionId: string, diagramIds: string[]): Promise<BaseModels.Diagram.Model[]> {\n    const { data } = await this.fetch.get<BaseModels.Diagram.Model[]>(\n      `${this._getCRUDEndpoint(versionId)}/diagrams${this._getIDsQuery('diagramID', diagramIds)}`\n    );\n\n    return data;\n  }\n\n  public async getLiveDiagramIDs(versionId: string): Promise<string[]> {\n    const { data } = await this.fetch.get<string[]>(`${this._getCRUDEndpoint(versionId)}/live-diagram-ids`);\n\n    return data;\n  }\n\n  public async export<\n    P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>,\n    V extends BaseModels.Version.Model<any> = BaseModels.Version.Model<BaseModels.Version.PlatformData>,\n    D extends BaseModels.Diagram.Model = BaseModels.Diagram.Model,\n    PM extends BaseModels.Program.Model = BaseModels.Program.Model\n  >(id: string, options: { programs: true }): Promise<{ project: P; version: V; diagrams: Record<string, D>; programs: Record<string, PM> }>;\n\n  public async export<\n    P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>,\n    V extends BaseModels.Version.Model<any> = BaseModels.Version.Model<BaseModels.Version.PlatformData>,\n    D extends BaseModels.Diagram.Model = BaseModels.Diagram.Model\n  >(id: string, options?: { programs?: boolean }): Promise<{ project: P; version: V; diagrams: Record<string, D> }>;\n\n  public async export(\n    id: string,\n    options?: { programs?: boolean }\n  ): Promise<{\n    project: BaseModels.Project.Model<any, any>;\n    version: BaseModels.Version.Model<any>;\n    diagrams: Record<string, BaseModels.Diagram.Model>;\n    programs?: Record<string, BaseModels.Program.Model>;\n  }> {\n    const { data } = await this.fetch.get<{\n      project: BaseModels.Project.Model<any, any>;\n      version: BaseModels.Version.Model<any>;\n      diagrams: Record<string, BaseModels.Diagram.Model>;\n      programs?: Record<string, BaseModels.Program.Model>;\n    }>(`${this._getCRUDEndpoint(id)}/export${options?.programs ? '?programs=1' : ''}`);\n\n    return data;\n  }\n\n  public async exportResponses(id: string): Promise<BaseModels.Version.DiagramResponse[]> {\n    const { data } = await this.fetch.get<BaseModels.Version.DiagramResponse[]>(`${this._getCRUDEndpoint(id)}/export/responses`);\n\n    return data;\n  }\n\n  public async import<P extends BaseModels.Project.Model<any, any> = BaseModels.Project.Model<AnyRecord, AnyRecord>>(\n    workspaceID: string,\n    data: { project: P; version: BaseModels.Version.Model<any>; diagrams: Record<string, BaseModels.Diagram.Model<any>> }\n  ): Promise<P> {\n    const { data: newProject } = await this.fetch.post<P>(`${this._getCRUDEndpoint()}/import`, { workspaceID, data });\n\n    return newProject;\n  }\n\n  public async getPrototype<T extends BaseModels.Version.Prototype>(id: string, body: { isPublic?: boolean } = {}): Promise<T> {\n    const query = body.isPublic ? `?isPublic=${body.isPublic}` : '';\n    const { data } = await this.fetch.get<T>(`${this._getCRUDEndpoint(id)}/prototype${query}`);\n\n    return data;\n  }\n\n  public async updatePrototype<P extends Partial<P>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/prototype`, body);\n\n    return data;\n  }\n\n  public async updatePrototypeSettings<P extends Partial<BaseModels.Version.Prototype['settings']>>(id: string, body: P): Promise<P> {\n    const { data } = await this.fetch.patch<P>(`${this._getCRUDEndpoint(id)}/prototype`, body, { path: 'settings' });\n\n    return data;\n  }\n\n  public async checkPrototypeSharedLogin(id: string, body: { password: string }): Promise<{ versionID: string }> {\n    const { data } = await this.fetch.put<{ versionID: string }>(`${this._getCRUDEndpoint(id)}/prototype/share/login`, body);\n\n    return data;\n  }\n\n  public async getPrototypePlan(id: string): Promise<{ plan: string }> {\n    const { data } = await this.fetch.get<{ plan: string }>(`${this._getCRUDEndpoint(id)}/prototype/plan`);\n\n    return data;\n  }\n\n  public async reorderComponents(id: string, body: { fromID: string; toIndex: number }): Promise<BaseModels.Version.FolderItem> {\n    const { data } = await this.fetch.patch<BaseModels.Version.FolderItem>(`${this._getCRUDEndpoint(id)}/components/reorder`, body);\n\n    return data;\n  }\n\n  /**\n   * @deprecated topics moved to domain\n   */\n\n  public async reorderTopics(id: string, body: { fromID: string; toIndex: number }): Promise<BaseModels.Version.FolderItem> {\n    const { data } = await this.fetch.patch<BaseModels.Version.FolderItem>(`${this._getCRUDEndpoint(id)}/topics/reorder`, body);\n\n    return data;\n  }\n}\n\nexport default VersionResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0c4feb3cf260764fae1cfdcca609a31861d3026"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/canvasTemplate.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/canvasTemplate.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":62}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":33}},"5":{"start":{"line":10,"column":8},"end":{"line":15,"column":11}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":36}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":44}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":43}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":48}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":43},"end":{"line":16,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":26},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":29},"end":{"line":22,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":34},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":38},"end":{"line":28,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":32},"end":{"line":31,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":44,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":44,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/canvasTemplate.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/canvasTemplate.ts"],"names":[],"mappings":";;;;;AAGA,+DAA+C;AAE/C,MAAM,QAAQ,GAAG,gBAAgB,CAAC;AAIlC,MAAM,sBAAuB,SAAQ,oBAA+F;IAClI,YAAY,KAAY,EAAE,EAAE,cAAc,EAA8B;QACtE,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,sBAAsB;YAC7B,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,EAAE,cAAc,EAAE;SACjC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,SAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAoC,SAAS,CAAC,CAAC;IACjE,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,SAAiB,EAAE,EAAU;QAC5C,OAAO,IAAI,CAAC,QAAQ,CAAoC,SAAS,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,SAAiB,EAAE,IAAuC;QAC5E,OAAO,IAAI,CAAC,KAAK,CAAoC,SAAS,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAEM,KAAK,CAAC,MAAM,CACjB,SAAiB,EACjB,EAAU,EACV,IAAO;QAEP,OAAO,IAAI,CAAC,MAAM,CAAI,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,SAAiB,EAAE,EAAU;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;CACF;AAED,kBAAe,sBAAsB,CAAC","sourcesContent":["import Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport CrudNestedResource from '../crudNested';\n\nconst ENDPOINT = 'canvasTemplate';\n\nexport type ModelKey = 'id';\n\nclass CanvasTemplateResource extends CrudNestedResource<string, BaseModels.Version.CanvasTemplate, ModelKey, CanvasTemplateResource> {\n  constructor(fetch: Fetch, { parentEndpoint }: { parentEndpoint: string }) {\n    super({\n      fetch,\n      clazz: CanvasTemplateResource,\n      endpoint: ENDPOINT,\n      clazzOptions: { parentEndpoint },\n    });\n  }\n\n  public async list(versionID: string): Promise<BaseModels.Version.CanvasTemplate[]> {\n    return this._get<BaseModels.Version.CanvasTemplate>(versionID);\n  }\n\n  public async get(versionID: string, id: string): Promise<BaseModels.Version.CanvasTemplate> {\n    return this._getByID<BaseModels.Version.CanvasTemplate>(versionID, id);\n  }\n\n  public async create(versionID: string, body: BaseModels.Version.CanvasTemplate): Promise<BaseModels.Version.CanvasTemplate> {\n    return this._post<BaseModels.Version.CanvasTemplate>(versionID, body);\n  }\n\n  public async update<T extends Partial<Omit<BaseModels.Version.CanvasTemplate, ModelKey | 'rootDiagramID'>>>(\n    versionID: string,\n    id: string,\n    body: T\n  ): Promise<T> {\n    return this._patch<T>(versionID, id, body);\n  }\n\n  public async delete(versionID: string, id: string): Promise<string> {\n    return this._delete(versionID, id);\n  }\n}\n\nexport default CanvasTemplateResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e07ce87bbf008b834a0aa29397140b63f0db8b6e"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crudNested.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crudNested.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":49}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":66}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":90}},"7":{"start":{"line":17,"column":25},"end":{"line":17,"column":114}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"9":{"start":{"line":21,"column":25},"end":{"line":21,"column":118}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":20}},"11":{"start":{"line":25,"column":25},"end":{"line":25,"column":85}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"13":{"start":{"line":29,"column":25},"end":{"line":29,"column":88}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"15":{"start":{"line":33,"column":25},"end":{"line":33,"column":90}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":69}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":18}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":25},"end":{"line":11,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":35},"end":{"line":15,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":33},"end":{"line":19,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":41},"end":{"line":23,"column":5}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":32},"end":{"line":27,"column":5}},"line":24},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":35},"end":{"line":31,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":37},"end":{"line":35,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":32},"end":{"line":39,"column":5}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":69},"end":{"line":14,"column":87}},"type":"cond-expr","locations":[{"start":{"line":14,"column":74},"end":{"line":14,"column":82}},{"start":{"line":14,"column":85},"end":{"line":14,"column":87}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":101,"5":101,"6":13,"7":2,"8":2,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":1,"1":101,"2":13,"3":2,"4":2,"5":1,"6":1,"7":1,"8":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[9,4]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crudNested.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/crudNested.ts"],"names":[],"mappings":";;;;;AAGA,kDAAmE;AAInE,MAAM,kBAOJ,SAAQ,cAA6B;IAGrC,YAAY,OAAmD;QAC7D,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;IAC5D,CAAC;IAES,gBAAgB,CAAC,QAAkB,EAAE,EAAiC;QAC9E,+DAA+D;QAC/D,OAAO,GAAG,IAAI,CAAC,cAAc,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACpF,CAAC;IAMS,KAAK,CAAC,IAAI,CAA+B,QAAkB,EAAE,MAAe;QACpF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEhH,OAAO,IAAI,CAAC;IACd,CAAC;IAMS,KAAK,CAAC,QAAQ,CAAC,QAAkB,EAAE,EAAgC,EAAE,MAAe;QAC5F,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAE/G,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,KAAK,CAA+B,QAAkB,EAAE,IAAuC;QAC7G,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAEjF,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,IAAI,CAClB,QAAkB,EAClB,EAAgC,EAChC,IAAuC;QAEvC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAEpF,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,MAAM,CAAwC,QAAkB,EAAE,EAAgC,EAAE,IAAO;QACzH,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAEtF,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,QAAkB,EAAE,EAAgC;QAC1E,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;QAE7D,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AAED,kBAAe,kBAAkB,CAAC","sourcesContent":["import type { PutPostType, SchemeType } from '@api-sdk/types';\nimport type { AnyRecord } from '@voiceflow/common';\n\nimport BaseResource, { BaseResourceOptions, Fields } from './base';\n\ntype NestedCrudResourceOptions<Client extends AnyRecord, Options extends { parentEndpoint: string }> = BaseResourceOptions<Client, Options>;\n\nclass NestedCrudResource<\n  ParentID,\n  Scheme extends AnyRecord,\n  ModelKey extends keyof SchemeType<Scheme>,\n  Client extends Record<string, any>,\n  Exclude extends keyof SchemeType<Scheme> = never,\n  Options extends { parentEndpoint: string } = { parentEndpoint: string }\n> extends BaseResource<Client, Options> {\n  private parentEndpoint: string;\n\n  constructor(options: NestedCrudResourceOptions<Client, Options>) {\n    super(options);\n\n    this.parentEndpoint = options.clazzOptions.parentEndpoint;\n  }\n\n  protected _getCRUDEndpoint(parentID: ParentID, id?: SchemeType<Scheme>[ModelKey]): string {\n    // eslint-disable-next-line sonarjs/no-nested-template-literals\n    return `${this.parentEndpoint}/${parentID}/${this.endpoint}${id ? `/${id}` : ''}`;\n  }\n\n  protected async _get<T extends Partial<SchemeType<Scheme>>>(parentID: ParentID, fields: Fields): Promise<T[]>;\n\n  protected async _get<T extends SchemeType<Scheme>>(parentID: ParentID): Promise<T[]>;\n\n  protected async _get<T extends SchemeType<Scheme>>(parentID: ParentID, fields?: Fields) {\n    const { data } = await this.fetch.get<T[]>(`${this._getCRUDEndpoint(parentID)}${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  protected async _getByID<T extends Partial<SchemeType<Scheme>>>(parentID: ParentID, id: SchemeType<Scheme>[ModelKey], fields: Fields): Promise<T>;\n\n  protected async _getByID<T extends SchemeType<Scheme>>(parentID: ParentID, id: SchemeType<Scheme>[ModelKey]): Promise<T>;\n\n  protected async _getByID(parentID: ParentID, id: SchemeType<Scheme>[ModelKey], fields?: Fields) {\n    const { data } = await this.fetch.get(`${this._getCRUDEndpoint(parentID, id)}${this._getFieldsQuery(fields)}`);\n\n    return data;\n  }\n\n  protected async _post<T extends SchemeType<Scheme>>(parentID: ParentID, body: PutPostType<T, ModelKey, Exclude>): Promise<T> {\n    const { data } = await this.fetch.post<T>(this._getCRUDEndpoint(parentID), body);\n\n    return data;\n  }\n\n  protected async _put<T extends SchemeType<Scheme>>(\n    parentID: ParentID,\n    id: SchemeType<Scheme>[ModelKey],\n    body: PutPostType<T, ModelKey, Exclude>\n  ): Promise<T> {\n    const { data } = await this.fetch.put<T>(this._getCRUDEndpoint(parentID, id), body);\n\n    return data;\n  }\n\n  protected async _patch<T extends Partial<SchemeType<Scheme>>>(parentID: ParentID, id: SchemeType<Scheme>[ModelKey], body: T): Promise<T> {\n    const { data } = await this.fetch.patch<T>(this._getCRUDEndpoint(parentID, id), body);\n\n    return data;\n  }\n\n  protected async _delete(parentID: ParentID, id: SchemeType<Scheme>[ModelKey]): Promise<SchemeType<Scheme>[ModelKey]> {\n    await this.fetch.delete(this._getCRUDEndpoint(parentID, id));\n\n    return id;\n  }\n}\n\nexport default NestedCrudResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87900999caae86bac3d500f576ea5911f2821fad"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/domain.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/domain.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":62}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":26}},"5":{"start":{"line":10,"column":8},"end":{"line":15,"column":11}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":36}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":44}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":43}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":48}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"11":{"start":{"line":33,"column":25},"end":{"line":33,"column":109}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"13":{"start":{"line":37,"column":25},"end":{"line":37,"column":109}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"15":{"start":{"line":41,"column":25},"end":{"line":41,"column":122}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"17":{"start":{"line":45,"column":0},"end":{"line":45,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":43},"end":{"line":16,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":26},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":29},"end":{"line":22,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":34},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":38},"end":{"line":28,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":32},"end":{"line":31,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":43},"end":{"line":35,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":46},"end":{"line":39,"column":5}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":53},"end":{"line":43,"column":5}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":47,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":47,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/domain.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/resources/version/domain.ts"],"names":[],"mappings":";;;;;AAGA,+DAA+C;AAE/C,MAAM,QAAQ,GAAG,SAAS,CAAC;AAI3B,MAAM,cAAe,SAAQ,oBAA+E;IAC1G,YAAY,KAAY,EAAE,EAAE,cAAc,EAA8B;QACtE,KAAK,CAAC;YACJ,KAAK;YACL,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,EAAE,cAAc,EAAE;SACjC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,SAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAA4B,SAAS,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,SAAiB,EAAE,EAAU;QAC5C,OAAO,IAAI,CAAC,QAAQ,CAA4B,SAAS,EAAE,EAAE,CAAC,CAAC;IACjE,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,SAAiB,EAAE,IAA+B;QACpE,OAAO,IAAI,CAAC,KAAK,CAA4B,SAAS,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAEM,KAAK,CAAC,MAAM,CACjB,SAAiB,EACjB,EAAU,EACV,IAAO;QAEP,OAAO,IAAI,CAAC,MAAM,CAAI,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,SAAiB,EAAE,EAAU;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,SAAiB,EAAE,EAAU,EAAE,OAAe;QAClE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;QAE9G,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,SAAiB,EAAE,EAAU,EAAE,OAAe;QACrE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,OAAO,EAAE,CAAC,CAAC;QAE9G,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,SAAiB,EAAE,EAAU,EAAE,OAAe,EAAE,IAAyB;QACjG,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,OAAO,UAAU,EAAE,IAAI,CAAC,CAAC;QAE7H,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,kBAAe,cAAc,CAAC","sourcesContent":["import Fetch from '@api-sdk/fetch';\nimport { BaseModels } from '@voiceflow/base-types';\n\nimport CrudNestedResource from '../crudNested';\n\nconst ENDPOINT = 'domains';\n\nexport type ModelKey = 'id';\n\nclass DomainResource extends CrudNestedResource<string, BaseModels.Version.Domain, ModelKey, DomainResource> {\n  constructor(fetch: Fetch, { parentEndpoint }: { parentEndpoint: string }) {\n    super({\n      fetch,\n      clazz: DomainResource,\n      endpoint: ENDPOINT,\n      clazzOptions: { parentEndpoint },\n    });\n  }\n\n  public async list(versionID: string): Promise<BaseModels.Version.Domain[]> {\n    return this._get<BaseModels.Version.Domain>(versionID);\n  }\n\n  public async get(versionID: string, id: string): Promise<BaseModels.Version.Domain> {\n    return this._getByID<BaseModels.Version.Domain>(versionID, id);\n  }\n\n  public async create(versionID: string, body: BaseModels.Version.Domain): Promise<BaseModels.Version.Domain> {\n    return this._post<BaseModels.Version.Domain>(versionID, body);\n  }\n\n  public async update<T extends Partial<Omit<BaseModels.Version.Domain, ModelKey | 'rootDiagramID'>>>(\n    versionID: string,\n    id: string,\n    body: T\n  ): Promise<T> {\n    return this._patch<T>(versionID, id, body);\n  }\n\n  public async delete(versionID: string, id: string): Promise<string> {\n    return this._delete(versionID, id);\n  }\n\n  public async topicAdd(versionID: string, id: string, topicID: string): Promise<string> {\n    const { data } = await this.fetch.post<string>(`${this._getCRUDEndpoint(versionID, id)}/topics`, { topicID });\n\n    return data;\n  }\n\n  public async topicRemove(versionID: string, id: string, topicID: string): Promise<string> {\n    const { data } = await this.fetch.delete<string>(`${this._getCRUDEndpoint(versionID, id)}/topics/${topicID}`);\n\n    return data;\n  }\n\n  public async topicReorder(versionID: string, id: string, topicID: string, body: { toIndex: number }): Promise<string[]> {\n    const { data } = await this.fetch.patch<string[]>(`${this._getCRUDEndpoint(versionID, id)}/topics/${topicID}/reorder`, body);\n\n    return data;\n  }\n}\n\nexport default DomainResource;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88aa1edeab26714d2da2841872a038ff93913151"},"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/index.ts":{"path":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"26":{"start":{"line":27,"column":10},"end":{"line":27,"column":46}},"27":{"start":{"line":28,"column":17},"end":{"line":28,"column":36}},"28":{"start":{"line":29,"column":23},"end":{"line":29,"column":48}},"29":{"start":{"line":30,"column":0},"end":{"line":33,"column":3}},"30":{"start":{"line":34,"column":0},"end":{"line":36,"column":3}},"31":{"start":{"line":39,"column":8},"end":{"line":39,"column":62}},"32":{"start":{"line":40,"column":8},"end":{"line":40,"column":35}},"33":{"start":{"line":41,"column":8},"end":{"line":41,"column":39}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":152}},"35":{"start":{"line":47,"column":8},"end":{"line":47,"column":90}},"36":{"start":{"line":48,"column":8},"end":{"line":48,"column":140}},"37":{"start":{"line":51,"column":0},"end":{"line":51,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":44},"end":{"line":42,"column":5}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":39},"end":{"line":45,"column":5}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":28},"end":{"line":49,"column":5}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":37}},"type":"default-arg","locations":[{"start":{"line":43,"column":35},"end":{"line":43,"column":37}}],"line":43}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":3,"32":3,"33":3,"34":1,"35":1,"36":1,"37":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":3,"7":1,"8":1},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1]},"inputSourceMap":{"version":3,"file":"/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/index.ts","sources":["/Users/brennan-lu/Desktop/voiceflow/libs/packages/api-sdk/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAiC;AAEjC,qCAAkC;AAClC,iDAA6D;AAMhD,QAAA,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9B,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;IACrB,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;CACxB,CAAC,CAAC;AAMU,QAAA,qBAAqB,GAAG,CAAC,CAAC,IAAI,CAAC;IAC1C,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE;CAC1B,CAAC,CAAC;AAEH,MAAM,MAAM;IAKV,YAAY,EAAE,SAAS,EAAE,WAAW,EAAU;QAC5C,CAAC,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE,eAAO,CAAC,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAEM,oBAAoB,CAAC,UAAmB,EAAE;QAC/C,OAAO,IAAI,2BAAY,iCAClB,OAAO,KACV,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,WAAW,EAAE,IAAI,CAAC,WAAW,IAC7B,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,OAA6D;QACjF,CAAC,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,EAAE,6BAAqB,CAAC,CAAC;QAE1E,OAAO,IAAI,eAAM,iCACZ,OAAO,KACV,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,WAAW,EAAE,IAAI,CAAC,WAAW,IAC7B,CAAC;IACL,CAAC;CACF;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import * as s from 'superstruct';\n\nimport { Client } from './client';\nimport { ClientOptions, PublicClient } from './publicClient';\n\nexport type { Client } from './client';\nexport type { PublicClient } from './publicClient';\nexport type { Flatten } from './types';\n\nexport const SParams = s.object({\n  clientKey: s.string(),\n  apiEndpoint: s.string(),\n});\n\nexport type Options = Pick<ClientOptions, 'options' | 'analyticsEncryption'>;\n\nexport interface Params extends s.StructType<typeof SParams>, Options {}\n\nexport const SGenerateClientParams = s.type({\n  authorization: s.string(),\n});\n\nclass ApiSDK {\n  private clientKey: string;\n\n  private apiEndpoint: string;\n\n  constructor({ clientKey, apiEndpoint }: Params) {\n    s.assert({ clientKey, apiEndpoint }, SParams);\n\n    this.clientKey = clientKey;\n    this.apiEndpoint = apiEndpoint;\n  }\n\n  public generatePublicClient(options: Options = {}): PublicClient {\n    return new PublicClient({\n      ...options,\n      clientKey: this.clientKey,\n      apiEndpoint: this.apiEndpoint,\n    });\n  }\n\n  public generateClient(options: s.StructType<typeof SGenerateClientParams> & Options): Client {\n    s.assert({ authorization: options.authorization }, SGenerateClientParams);\n\n    return new Client({\n      ...options,\n      clientKey: this.clientKey,\n      apiEndpoint: this.apiEndpoint,\n    });\n  }\n}\n\nexport default ApiSDK;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"86eb09ff90f69a3e86154e01a08ba1ff182a30cc"}}